import { ExtensionContext } from "vscode";
import { z } from "zod";
import { type ProviderSettingsWithId, ProviderSettingsEntry } from "@roo-code/types";
import { Mode } from "../../shared/modes";
export interface SyncCloudProfilesResult {
    hasChanges: boolean;
    activeProfileChanged: boolean;
    activeProfileId: string;
}
export declare const providerProfilesSchema: z.ZodObject<{
    currentApiConfigName: z.ZodString;
    apiConfigs: z.ZodRecord<z.ZodString, z.ZodObject<{
        codeIndexOpenAiKey: z.ZodOptional<z.ZodString>;
        codeIndexQdrantApiKey: z.ZodOptional<z.ZodString>;
        codebaseIndexOpenAiCompatibleBaseUrl: z.ZodOptional<z.ZodString>;
        codebaseIndexOpenAiCompatibleApiKey: z.ZodOptional<z.ZodString>;
        codebaseIndexOpenAiCompatibleModelDimension: z.ZodOptional<z.ZodNumber>;
        codebaseIndexGeminiApiKey: z.ZodOptional<z.ZodString>;
        codebaseIndexMistralApiKey: z.ZodOptional<z.ZodString>;
        codebaseIndexVercelAiGatewayApiKey: z.ZodOptional<z.ZodString>;
        includeMaxTokens: z.ZodOptional<z.ZodBoolean>;
        diffEnabled: z.ZodOptional<z.ZodBoolean>;
        todoListEnabled: z.ZodOptional<z.ZodBoolean>;
        fuzzyMatchThreshold: z.ZodOptional<z.ZodNumber>;
        modelTemperature: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        rateLimitSeconds: z.ZodOptional<z.ZodNumber>;
        consecutiveMistakeLimit: z.ZodOptional<z.ZodNumber>;
        enableReasoningEffort: z.ZodOptional<z.ZodBoolean>;
        reasoningEffort: z.ZodOptional<z.ZodUnion<[z.ZodEnum<["low", "medium", "high"]>, z.ZodLiteral<"minimal">]>>;
        modelMaxTokens: z.ZodOptional<z.ZodNumber>;
        modelMaxThinkingTokens: z.ZodOptional<z.ZodNumber>;
        verbosity: z.ZodOptional<z.ZodEnum<["low", "medium", "high"]>>;
        vercelAiGatewayApiKey: z.ZodOptional<z.ZodString>;
        vercelAiGatewayModelId: z.ZodOptional<z.ZodString>;
        apiModelId: z.ZodOptional<z.ZodString>;
        qwenCodeOauthPath: z.ZodOptional<z.ZodString>;
        ioIntelligenceModelId: z.ZodOptional<z.ZodString>;
        ioIntelligenceApiKey: z.ZodOptional<z.ZodString>;
        featherlessApiKey: z.ZodOptional<z.ZodString>;
        fireworksApiKey: z.ZodOptional<z.ZodString>;
        zaiApiKey: z.ZodOptional<z.ZodString>;
        zaiApiLine: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"china">, z.ZodLiteral<"international">]>>;
        sambaNovaApiKey: z.ZodOptional<z.ZodString>;
        cerebrasApiKey: z.ZodOptional<z.ZodString>;
        litellmBaseUrl: z.ZodOptional<z.ZodString>;
        litellmApiKey: z.ZodOptional<z.ZodString>;
        litellmModelId: z.ZodOptional<z.ZodString>;
        litellmUsePromptCache: z.ZodOptional<z.ZodBoolean>;
        chutesApiKey: z.ZodOptional<z.ZodString>;
        huggingFaceApiKey: z.ZodOptional<z.ZodString>;
        huggingFaceModelId: z.ZodOptional<z.ZodString>;
        huggingFaceInferenceProvider: z.ZodOptional<z.ZodString>;
        groqApiKey: z.ZodOptional<z.ZodString>;
        xaiApiKey: z.ZodOptional<z.ZodString>;
        fakeAi: z.ZodOptional<z.ZodUnknown>;
        requestyBaseUrl: z.ZodOptional<z.ZodString>;
        requestyApiKey: z.ZodOptional<z.ZodString>;
        requestyModelId: z.ZodOptional<z.ZodString>;
        unboundApiKey: z.ZodOptional<z.ZodString>;
        unboundModelId: z.ZodOptional<z.ZodString>;
        moonshotBaseUrl: z.ZodOptional<z.ZodUnion<[z.ZodLiteral<"https://api.moonshot.ai/v1">, z.ZodLiteral<"https://api.moonshot.cn/v1">]>>;
        moonshotApiKey: z.ZodOptional<z.ZodString>;
        doubaoBaseUrl: z.ZodOptional<z.ZodString>;
        doubaoApiKey: z.ZodOptional<z.ZodString>;
        deepInfraBaseUrl: z.ZodOptional<z.ZodString>;
        deepInfraApiKey: z.ZodOptional<z.ZodString>;
        deepInfraModelId: z.ZodOptional<z.ZodString>;
        deepSeekBaseUrl: z.ZodOptional<z.ZodString>;
        deepSeekApiKey: z.ZodOptional<z.ZodString>;
        mistralApiKey: z.ZodOptional<z.ZodString>;
        mistralCodestralUrl: z.ZodOptional<z.ZodString>;
        openAiNativeApiKey: z.ZodOptional<z.ZodString>;
        openAiNativeBaseUrl: z.ZodOptional<z.ZodString>;
        openAiNativeServiceTier: z.ZodOptional<z.ZodEnum<["default", "flex", "priority"]>>;
        geminiCliOAuthPath: z.ZodOptional<z.ZodString>;
        geminiCliProjectId: z.ZodOptional<z.ZodString>;
        geminiApiKey: z.ZodOptional<z.ZodString>;
        googleGeminiBaseUrl: z.ZodOptional<z.ZodString>;
        enableUrlContext: z.ZodOptional<z.ZodBoolean>;
        enableGrounding: z.ZodOptional<z.ZodBoolean>;
        lmStudioModelId: z.ZodOptional<z.ZodString>;
        lmStudioBaseUrl: z.ZodOptional<z.ZodString>;
        lmStudioDraftModelId: z.ZodOptional<z.ZodString>;
        lmStudioSpeculativeDecodingEnabled: z.ZodOptional<z.ZodBoolean>;
        vsCodeLmModelSelector: z.ZodOptional<z.ZodObject<{
            vendor: z.ZodOptional<z.ZodString>;
            family: z.ZodOptional<z.ZodString>;
            version: z.ZodOptional<z.ZodString>;
            id: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            id?: string | undefined;
            family?: string | undefined;
            version?: string | undefined;
            vendor?: string | undefined;
        }, {
            id?: string | undefined;
            family?: string | undefined;
            version?: string | undefined;
            vendor?: string | undefined;
        }>>;
        ollamaModelId: z.ZodOptional<z.ZodString>;
        ollamaBaseUrl: z.ZodOptional<z.ZodString>;
        ollamaApiKey: z.ZodOptional<z.ZodString>;
        openAiBaseUrl: z.ZodOptional<z.ZodString>;
        openAiApiKey: z.ZodOptional<z.ZodString>;
        openAiLegacyFormat: z.ZodOptional<z.ZodBoolean>;
        openAiR1FormatEnabled: z.ZodOptional<z.ZodBoolean>;
        openAiModelId: z.ZodOptional<z.ZodString>;
        openAiCustomModelInfo: z.ZodOptional<z.ZodNullable<z.ZodObject<{
            maxTokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            maxThinkingTokens: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
            contextWindow: z.ZodNumber;
            supportsImages: z.ZodOptional<z.ZodBoolean>;
            supportsComputerUse: z.ZodOptional<z.ZodBoolean>;
            supportsPromptCache: z.ZodBoolean;
            supportsVerbosity: z.ZodOptional<z.ZodBoolean>;
            supportsReasoningBudget: z.ZodOptional<z.ZodBoolean>;
            supportsTemperature: z.ZodOptional<z.ZodBoolean>;
            requiredReasoningBudget: z.ZodOptional<z.ZodBoolean>;
            supportsReasoningEffort: z.ZodOptional<z.ZodBoolean>;
            supportedParameters: z.ZodOptional<z.ZodArray<z.ZodEnum<["max_tokens", "temperature", "reasoning", "include_reasoning"]>, "many">>;
            inputPrice: z.ZodOptional<z.ZodNumber>;
            outputPrice: z.ZodOptional<z.ZodNumber>;
            cacheWritesPrice: z.ZodOptional<z.ZodNumber>;
            cacheReadsPrice: z.ZodOptional<z.ZodNumber>;
            description: z.ZodOptional<z.ZodString>;
            reasoningEffort: z.ZodOptional<z.ZodEnum<["low", "medium", "high"]>>;
            minTokensPerCachePoint: z.ZodOptional<z.ZodNumber>;
            maxCachePoints: z.ZodOptional<z.ZodNumber>;
            cachableFields: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            tiers: z.ZodOptional<z.ZodArray<z.ZodObject<{
                name: z.ZodOptional<z.ZodEnum<["default", "flex", "priority"]>>;
                contextWindow: z.ZodNumber;
                inputPrice: z.ZodOptional<z.ZodNumber>;
                outputPrice: z.ZodOptional<z.ZodNumber>;
                cacheWritesPrice: z.ZodOptional<z.ZodNumber>;
                cacheReadsPrice: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                contextWindow: number;
                name?: "default" | "flex" | "priority" | undefined;
                inputPrice?: number | undefined;
                outputPrice?: number | undefined;
                cacheWritesPrice?: number | undefined;
                cacheReadsPrice?: number | undefined;
            }, {
                contextWindow: number;
                name?: "default" | "flex" | "priority" | undefined;
                inputPrice?: number | undefined;
                outputPrice?: number | undefined;
                cacheWritesPrice?: number | undefined;
                cacheReadsPrice?: number | undefined;
            }>, "many">>;
        }, "strip", z.ZodTypeAny, {
            contextWindow: number;
            supportsPromptCache: boolean;
            maxTokens?: number | null | undefined;
            maxThinkingTokens?: number | null | undefined;
            supportsImages?: boolean | undefined;
            supportsComputerUse?: boolean | undefined;
            supportsVerbosity?: boolean | undefined;
            supportsReasoningBudget?: boolean | undefined;
            supportsTemperature?: boolean | undefined;
            requiredReasoningBudget?: boolean | undefined;
            supportsReasoningEffort?: boolean | undefined;
            supportedParameters?: ("reasoning" | "max_tokens" | "temperature" | "include_reasoning")[] | undefined;
            inputPrice?: number | undefined;
            outputPrice?: number | undefined;
            cacheWritesPrice?: number | undefined;
            cacheReadsPrice?: number | undefined;
            description?: string | undefined;
            reasoningEffort?: "low" | "medium" | "high" | undefined;
            minTokensPerCachePoint?: number | undefined;
            maxCachePoints?: number | undefined;
            cachableFields?: string[] | undefined;
            tiers?: {
                contextWindow: number;
                name?: "default" | "flex" | "priority" | undefined;
                inputPrice?: number | undefined;
                outputPrice?: number | undefined;
                cacheWritesPrice?: number | undefined;
                cacheReadsPrice?: number | undefined;
            }[] | undefined;
        }, {
            contextWindow: number;
            supportsPromptCache: boolean;
            maxTokens?: number | null | undefined;
            maxThinkingTokens?: number | null | undefined;
            supportsImages?: boolean | undefined;
            supportsComputerUse?: boolean | undefined;
            supportsVerbosity?: boolean | undefined;
            supportsReasoningBudget?: boolean | undefined;
            supportsTemperature?: boolean | undefined;
            requiredReasoningBudget?: boolean | undefined;
            supportsReasoningEffort?: boolean | undefined;
            supportedParameters?: ("reasoning" | "max_tokens" | "temperature" | "include_reasoning")[] | undefined;
            inputPrice?: number | undefined;
            outputPrice?: number | undefined;
            cacheWritesPrice?: number | undefined;
            cacheReadsPrice?: number | undefined;
            description?: string | undefined;
            reasoningEffort?: "low" | "medium" | "high" | undefined;
            minTokensPerCachePoint?: number | undefined;
            maxCachePoints?: number | undefined;
            cachableFields?: string[] | undefined;
            tiers?: {
                contextWindow: number;
                name?: "default" | "flex" | "priority" | undefined;
                inputPrice?: number | undefined;
                outputPrice?: number | undefined;
                cacheWritesPrice?: number | undefined;
                cacheReadsPrice?: number | undefined;
            }[] | undefined;
        }>>>;
        openAiUseAzure: z.ZodOptional<z.ZodBoolean>;
        azureApiVersion: z.ZodOptional<z.ZodString>;
        openAiStreamingEnabled: z.ZodOptional<z.ZodBoolean>;
        openAiHostHeader: z.ZodOptional<z.ZodString>;
        openAiHeaders: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        vertexKeyFile: z.ZodOptional<z.ZodString>;
        vertexJsonCredentials: z.ZodOptional<z.ZodString>;
        vertexProjectId: z.ZodOptional<z.ZodString>;
        vertexRegion: z.ZodOptional<z.ZodString>;
        awsAccessKey: z.ZodOptional<z.ZodString>;
        awsSecretKey: z.ZodOptional<z.ZodString>;
        awsSessionToken: z.ZodOptional<z.ZodString>;
        awsRegion: z.ZodOptional<z.ZodString>;
        awsUseCrossRegionInference: z.ZodOptional<z.ZodBoolean>;
        awsUsePromptCache: z.ZodOptional<z.ZodBoolean>;
        awsProfile: z.ZodOptional<z.ZodString>;
        awsUseProfile: z.ZodOptional<z.ZodBoolean>;
        awsApiKey: z.ZodOptional<z.ZodString>;
        awsUseApiKey: z.ZodOptional<z.ZodBoolean>;
        awsCustomArn: z.ZodOptional<z.ZodString>;
        awsModelContextWindow: z.ZodOptional<z.ZodNumber>;
        awsBedrockEndpointEnabled: z.ZodOptional<z.ZodBoolean>;
        awsBedrockEndpoint: z.ZodOptional<z.ZodString>;
        awsBedrock1MContext: z.ZodOptional<z.ZodBoolean>;
        openRouterApiKey: z.ZodOptional<z.ZodString>;
        openRouterModelId: z.ZodOptional<z.ZodString>;
        openRouterBaseUrl: z.ZodOptional<z.ZodString>;
        openRouterSpecificProvider: z.ZodOptional<z.ZodString>;
        openRouterUseMiddleOutTransform: z.ZodOptional<z.ZodBoolean>;
        glamaModelId: z.ZodOptional<z.ZodString>;
        glamaApiKey: z.ZodOptional<z.ZodString>;
        claudeCodePath: z.ZodOptional<z.ZodString>;
        claudeCodeMaxOutputTokens: z.ZodOptional<z.ZodNumber>;
        apiKey: z.ZodOptional<z.ZodString>;
        anthropicBaseUrl: z.ZodOptional<z.ZodString>;
        anthropicUseAuthToken: z.ZodOptional<z.ZodBoolean>;
        anthropicBeta1MContext: z.ZodOptional<z.ZodBoolean>;
        apiProvider: z.ZodOptional<z.ZodEnum<["anthropic", "claude-code", "glama", "openrouter", "bedrock", "vertex", "openai", "ollama", "vscode-lm", "lmstudio", "gemini", "gemini-cli", "openai-native", "mistral", "moonshot", "deepseek", "deepinfra", "doubao", "qwen-code", "unbound", "requesty", "human-relay", "fake-ai", "xai", "groq", "chutes", "litellm", "huggingface", "cerebras", "sambanova", "zai", "fireworks", "featherless", "io-intelligence", "roo", "vercel-ai-gateway"]>>;
    } & {
        id: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id?: string | undefined;
        reasoningEffort?: "low" | "medium" | "high" | "minimal" | undefined;
        codebaseIndexOpenAiCompatibleBaseUrl?: string | undefined;
        codebaseIndexOpenAiCompatibleModelDimension?: number | undefined;
        codeIndexOpenAiKey?: string | undefined;
        codeIndexQdrantApiKey?: string | undefined;
        codebaseIndexOpenAiCompatibleApiKey?: string | undefined;
        codebaseIndexGeminiApiKey?: string | undefined;
        codebaseIndexMistralApiKey?: string | undefined;
        codebaseIndexVercelAiGatewayApiKey?: string | undefined;
        apiProvider?: "openai" | "anthropic" | "ollama" | "gemini" | "mistral" | "vercel-ai-gateway" | "claude-code" | "glama" | "openrouter" | "bedrock" | "vertex" | "vscode-lm" | "lmstudio" | "gemini-cli" | "openai-native" | "moonshot" | "deepseek" | "deepinfra" | "doubao" | "qwen-code" | "unbound" | "requesty" | "human-relay" | "fake-ai" | "xai" | "groq" | "chutes" | "litellm" | "huggingface" | "cerebras" | "sambanova" | "zai" | "fireworks" | "featherless" | "io-intelligence" | "roo" | undefined;
        includeMaxTokens?: boolean | undefined;
        diffEnabled?: boolean | undefined;
        todoListEnabled?: boolean | undefined;
        fuzzyMatchThreshold?: number | undefined;
        modelTemperature?: number | null | undefined;
        rateLimitSeconds?: number | undefined;
        consecutiveMistakeLimit?: number | undefined;
        enableReasoningEffort?: boolean | undefined;
        modelMaxTokens?: number | undefined;
        modelMaxThinkingTokens?: number | undefined;
        verbosity?: "low" | "medium" | "high" | undefined;
        apiModelId?: string | undefined;
        apiKey?: string | undefined;
        anthropicBaseUrl?: string | undefined;
        anthropicUseAuthToken?: boolean | undefined;
        anthropicBeta1MContext?: boolean | undefined;
        claudeCodePath?: string | undefined;
        claudeCodeMaxOutputTokens?: number | undefined;
        glamaModelId?: string | undefined;
        glamaApiKey?: string | undefined;
        openRouterApiKey?: string | undefined;
        openRouterModelId?: string | undefined;
        openRouterBaseUrl?: string | undefined;
        openRouterSpecificProvider?: string | undefined;
        openRouterUseMiddleOutTransform?: boolean | undefined;
        awsAccessKey?: string | undefined;
        awsSecretKey?: string | undefined;
        awsSessionToken?: string | undefined;
        awsRegion?: string | undefined;
        awsUseCrossRegionInference?: boolean | undefined;
        awsUsePromptCache?: boolean | undefined;
        awsProfile?: string | undefined;
        awsUseProfile?: boolean | undefined;
        awsApiKey?: string | undefined;
        awsUseApiKey?: boolean | undefined;
        awsCustomArn?: string | undefined;
        awsModelContextWindow?: number | undefined;
        awsBedrockEndpointEnabled?: boolean | undefined;
        awsBedrockEndpoint?: string | undefined;
        awsBedrock1MContext?: boolean | undefined;
        vertexKeyFile?: string | undefined;
        vertexJsonCredentials?: string | undefined;
        vertexProjectId?: string | undefined;
        vertexRegion?: string | undefined;
        enableUrlContext?: boolean | undefined;
        enableGrounding?: boolean | undefined;
        openAiBaseUrl?: string | undefined;
        openAiApiKey?: string | undefined;
        openAiLegacyFormat?: boolean | undefined;
        openAiR1FormatEnabled?: boolean | undefined;
        openAiModelId?: string | undefined;
        openAiCustomModelInfo?: {
            contextWindow: number;
            supportsPromptCache: boolean;
            maxTokens?: number | null | undefined;
            maxThinkingTokens?: number | null | undefined;
            supportsImages?: boolean | undefined;
            supportsComputerUse?: boolean | undefined;
            supportsVerbosity?: boolean | undefined;
            supportsReasoningBudget?: boolean | undefined;
            supportsTemperature?: boolean | undefined;
            requiredReasoningBudget?: boolean | undefined;
            supportsReasoningEffort?: boolean | undefined;
            supportedParameters?: ("reasoning" | "max_tokens" | "temperature" | "include_reasoning")[] | undefined;
            inputPrice?: number | undefined;
            outputPrice?: number | undefined;
            cacheWritesPrice?: number | undefined;
            cacheReadsPrice?: number | undefined;
            description?: string | undefined;
            reasoningEffort?: "low" | "medium" | "high" | undefined;
            minTokensPerCachePoint?: number | undefined;
            maxCachePoints?: number | undefined;
            cachableFields?: string[] | undefined;
            tiers?: {
                contextWindow: number;
                name?: "default" | "flex" | "priority" | undefined;
                inputPrice?: number | undefined;
                outputPrice?: number | undefined;
                cacheWritesPrice?: number | undefined;
                cacheReadsPrice?: number | undefined;
            }[] | undefined;
        } | null | undefined;
        openAiUseAzure?: boolean | undefined;
        azureApiVersion?: string | undefined;
        openAiStreamingEnabled?: boolean | undefined;
        openAiHostHeader?: string | undefined;
        openAiHeaders?: Record<string, string> | undefined;
        ollamaModelId?: string | undefined;
        ollamaBaseUrl?: string | undefined;
        ollamaApiKey?: string | undefined;
        vsCodeLmModelSelector?: {
            id?: string | undefined;
            family?: string | undefined;
            version?: string | undefined;
            vendor?: string | undefined;
        } | undefined;
        lmStudioModelId?: string | undefined;
        lmStudioBaseUrl?: string | undefined;
        lmStudioDraftModelId?: string | undefined;
        lmStudioSpeculativeDecodingEnabled?: boolean | undefined;
        geminiApiKey?: string | undefined;
        googleGeminiBaseUrl?: string | undefined;
        geminiCliOAuthPath?: string | undefined;
        geminiCliProjectId?: string | undefined;
        openAiNativeApiKey?: string | undefined;
        openAiNativeBaseUrl?: string | undefined;
        openAiNativeServiceTier?: "default" | "flex" | "priority" | undefined;
        mistralApiKey?: string | undefined;
        mistralCodestralUrl?: string | undefined;
        deepSeekBaseUrl?: string | undefined;
        deepSeekApiKey?: string | undefined;
        deepInfraBaseUrl?: string | undefined;
        deepInfraApiKey?: string | undefined;
        deepInfraModelId?: string | undefined;
        doubaoBaseUrl?: string | undefined;
        doubaoApiKey?: string | undefined;
        moonshotBaseUrl?: "https://api.moonshot.ai/v1" | "https://api.moonshot.cn/v1" | undefined;
        moonshotApiKey?: string | undefined;
        unboundApiKey?: string | undefined;
        unboundModelId?: string | undefined;
        requestyBaseUrl?: string | undefined;
        requestyApiKey?: string | undefined;
        requestyModelId?: string | undefined;
        fakeAi?: unknown;
        xaiApiKey?: string | undefined;
        groqApiKey?: string | undefined;
        huggingFaceApiKey?: string | undefined;
        huggingFaceModelId?: string | undefined;
        huggingFaceInferenceProvider?: string | undefined;
        chutesApiKey?: string | undefined;
        litellmBaseUrl?: string | undefined;
        litellmApiKey?: string | undefined;
        litellmModelId?: string | undefined;
        litellmUsePromptCache?: boolean | undefined;
        cerebrasApiKey?: string | undefined;
        sambaNovaApiKey?: string | undefined;
        zaiApiKey?: string | undefined;
        zaiApiLine?: "china" | "international" | undefined;
        fireworksApiKey?: string | undefined;
        featherlessApiKey?: string | undefined;
        ioIntelligenceModelId?: string | undefined;
        ioIntelligenceApiKey?: string | undefined;
        qwenCodeOauthPath?: string | undefined;
        vercelAiGatewayApiKey?: string | undefined;
        vercelAiGatewayModelId?: string | undefined;
    }, {
        id?: string | undefined;
        reasoningEffort?: "low" | "medium" | "high" | "minimal" | undefined;
        codebaseIndexOpenAiCompatibleBaseUrl?: string | undefined;
        codebaseIndexOpenAiCompatibleModelDimension?: number | undefined;
        codeIndexOpenAiKey?: string | undefined;
        codeIndexQdrantApiKey?: string | undefined;
        codebaseIndexOpenAiCompatibleApiKey?: string | undefined;
        codebaseIndexGeminiApiKey?: string | undefined;
        codebaseIndexMistralApiKey?: string | undefined;
        codebaseIndexVercelAiGatewayApiKey?: string | undefined;
        apiProvider?: "openai" | "anthropic" | "ollama" | "gemini" | "mistral" | "vercel-ai-gateway" | "claude-code" | "glama" | "openrouter" | "bedrock" | "vertex" | "vscode-lm" | "lmstudio" | "gemini-cli" | "openai-native" | "moonshot" | "deepseek" | "deepinfra" | "doubao" | "qwen-code" | "unbound" | "requesty" | "human-relay" | "fake-ai" | "xai" | "groq" | "chutes" | "litellm" | "huggingface" | "cerebras" | "sambanova" | "zai" | "fireworks" | "featherless" | "io-intelligence" | "roo" | undefined;
        includeMaxTokens?: boolean | undefined;
        diffEnabled?: boolean | undefined;
        todoListEnabled?: boolean | undefined;
        fuzzyMatchThreshold?: number | undefined;
        modelTemperature?: number | null | undefined;
        rateLimitSeconds?: number | undefined;
        consecutiveMistakeLimit?: number | undefined;
        enableReasoningEffort?: boolean | undefined;
        modelMaxTokens?: number | undefined;
        modelMaxThinkingTokens?: number | undefined;
        verbosity?: "low" | "medium" | "high" | undefined;
        apiModelId?: string | undefined;
        apiKey?: string | undefined;
        anthropicBaseUrl?: string | undefined;
        anthropicUseAuthToken?: boolean | undefined;
        anthropicBeta1MContext?: boolean | undefined;
        claudeCodePath?: string | undefined;
        claudeCodeMaxOutputTokens?: number | undefined;
        glamaModelId?: string | undefined;
        glamaApiKey?: string | undefined;
        openRouterApiKey?: string | undefined;
        openRouterModelId?: string | undefined;
        openRouterBaseUrl?: string | undefined;
        openRouterSpecificProvider?: string | undefined;
        openRouterUseMiddleOutTransform?: boolean | undefined;
        awsAccessKey?: string | undefined;
        awsSecretKey?: string | undefined;
        awsSessionToken?: string | undefined;
        awsRegion?: string | undefined;
        awsUseCrossRegionInference?: boolean | undefined;
        awsUsePromptCache?: boolean | undefined;
        awsProfile?: string | undefined;
        awsUseProfile?: boolean | undefined;
        awsApiKey?: string | undefined;
        awsUseApiKey?: boolean | undefined;
        awsCustomArn?: string | undefined;
        awsModelContextWindow?: number | undefined;
        awsBedrockEndpointEnabled?: boolean | undefined;
        awsBedrockEndpoint?: string | undefined;
        awsBedrock1MContext?: boolean | undefined;
        vertexKeyFile?: string | undefined;
        vertexJsonCredentials?: string | undefined;
        vertexProjectId?: string | undefined;
        vertexRegion?: string | undefined;
        enableUrlContext?: boolean | undefined;
        enableGrounding?: boolean | undefined;
        openAiBaseUrl?: string | undefined;
        openAiApiKey?: string | undefined;
        openAiLegacyFormat?: boolean | undefined;
        openAiR1FormatEnabled?: boolean | undefined;
        openAiModelId?: string | undefined;
        openAiCustomModelInfo?: {
            contextWindow: number;
            supportsPromptCache: boolean;
            maxTokens?: number | null | undefined;
            maxThinkingTokens?: number | null | undefined;
            supportsImages?: boolean | undefined;
            supportsComputerUse?: boolean | undefined;
            supportsVerbosity?: boolean | undefined;
            supportsReasoningBudget?: boolean | undefined;
            supportsTemperature?: boolean | undefined;
            requiredReasoningBudget?: boolean | undefined;
            supportsReasoningEffort?: boolean | undefined;
            supportedParameters?: ("reasoning" | "max_tokens" | "temperature" | "include_reasoning")[] | undefined;
            inputPrice?: number | undefined;
            outputPrice?: number | undefined;
            cacheWritesPrice?: number | undefined;
            cacheReadsPrice?: number | undefined;
            description?: string | undefined;
            reasoningEffort?: "low" | "medium" | "high" | undefined;
            minTokensPerCachePoint?: number | undefined;
            maxCachePoints?: number | undefined;
            cachableFields?: string[] | undefined;
            tiers?: {
                contextWindow: number;
                name?: "default" | "flex" | "priority" | undefined;
                inputPrice?: number | undefined;
                outputPrice?: number | undefined;
                cacheWritesPrice?: number | undefined;
                cacheReadsPrice?: number | undefined;
            }[] | undefined;
        } | null | undefined;
        openAiUseAzure?: boolean | undefined;
        azureApiVersion?: string | undefined;
        openAiStreamingEnabled?: boolean | undefined;
        openAiHostHeader?: string | undefined;
        openAiHeaders?: Record<string, string> | undefined;
        ollamaModelId?: string | undefined;
        ollamaBaseUrl?: string | undefined;
        ollamaApiKey?: string | undefined;
        vsCodeLmModelSelector?: {
            id?: string | undefined;
            family?: string | undefined;
            version?: string | undefined;
            vendor?: string | undefined;
        } | undefined;
        lmStudioModelId?: string | undefined;
        lmStudioBaseUrl?: string | undefined;
        lmStudioDraftModelId?: string | undefined;
        lmStudioSpeculativeDecodingEnabled?: boolean | undefined;
        geminiApiKey?: string | undefined;
        googleGeminiBaseUrl?: string | undefined;
        geminiCliOAuthPath?: string | undefined;
        geminiCliProjectId?: string | undefined;
        openAiNativeApiKey?: string | undefined;
        openAiNativeBaseUrl?: string | undefined;
        openAiNativeServiceTier?: "default" | "flex" | "priority" | undefined;
        mistralApiKey?: string | undefined;
        mistralCodestralUrl?: string | undefined;
        deepSeekBaseUrl?: string | undefined;
        deepSeekApiKey?: string | undefined;
        deepInfraBaseUrl?: string | undefined;
        deepInfraApiKey?: string | undefined;
        deepInfraModelId?: string | undefined;
        doubaoBaseUrl?: string | undefined;
        doubaoApiKey?: string | undefined;
        moonshotBaseUrl?: "https://api.moonshot.ai/v1" | "https://api.moonshot.cn/v1" | undefined;
        moonshotApiKey?: string | undefined;
        unboundApiKey?: string | undefined;
        unboundModelId?: string | undefined;
        requestyBaseUrl?: string | undefined;
        requestyApiKey?: string | undefined;
        requestyModelId?: string | undefined;
        fakeAi?: unknown;
        xaiApiKey?: string | undefined;
        groqApiKey?: string | undefined;
        huggingFaceApiKey?: string | undefined;
        huggingFaceModelId?: string | undefined;
        huggingFaceInferenceProvider?: string | undefined;
        chutesApiKey?: string | undefined;
        litellmBaseUrl?: string | undefined;
        litellmApiKey?: string | undefined;
        litellmModelId?: string | undefined;
        litellmUsePromptCache?: boolean | undefined;
        cerebrasApiKey?: string | undefined;
        sambaNovaApiKey?: string | undefined;
        zaiApiKey?: string | undefined;
        zaiApiLine?: "china" | "international" | undefined;
        fireworksApiKey?: string | undefined;
        featherlessApiKey?: string | undefined;
        ioIntelligenceModelId?: string | undefined;
        ioIntelligenceApiKey?: string | undefined;
        qwenCodeOauthPath?: string | undefined;
        vercelAiGatewayApiKey?: string | undefined;
        vercelAiGatewayModelId?: string | undefined;
    }>>;
    modeApiConfigs: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    cloudProfileIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    migrations: z.ZodOptional<z.ZodObject<{
        rateLimitSecondsMigrated: z.ZodOptional<z.ZodBoolean>;
        diffSettingsMigrated: z.ZodOptional<z.ZodBoolean>;
        openAiHeadersMigrated: z.ZodOptional<z.ZodBoolean>;
        consecutiveMistakeLimitMigrated: z.ZodOptional<z.ZodBoolean>;
        todoListEnabledMigrated: z.ZodOptional<z.ZodBoolean>;
    }, "strip", z.ZodTypeAny, {
        rateLimitSecondsMigrated?: boolean | undefined;
        diffSettingsMigrated?: boolean | undefined;
        openAiHeadersMigrated?: boolean | undefined;
        consecutiveMistakeLimitMigrated?: boolean | undefined;
        todoListEnabledMigrated?: boolean | undefined;
    }, {
        rateLimitSecondsMigrated?: boolean | undefined;
        diffSettingsMigrated?: boolean | undefined;
        openAiHeadersMigrated?: boolean | undefined;
        consecutiveMistakeLimitMigrated?: boolean | undefined;
        todoListEnabledMigrated?: boolean | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    currentApiConfigName: string;
    apiConfigs: Record<string, {
        id?: string | undefined;
        reasoningEffort?: "low" | "medium" | "high" | "minimal" | undefined;
        codebaseIndexOpenAiCompatibleBaseUrl?: string | undefined;
        codebaseIndexOpenAiCompatibleModelDimension?: number | undefined;
        codeIndexOpenAiKey?: string | undefined;
        codeIndexQdrantApiKey?: string | undefined;
        codebaseIndexOpenAiCompatibleApiKey?: string | undefined;
        codebaseIndexGeminiApiKey?: string | undefined;
        codebaseIndexMistralApiKey?: string | undefined;
        codebaseIndexVercelAiGatewayApiKey?: string | undefined;
        apiProvider?: "openai" | "anthropic" | "ollama" | "gemini" | "mistral" | "vercel-ai-gateway" | "claude-code" | "glama" | "openrouter" | "bedrock" | "vertex" | "vscode-lm" | "lmstudio" | "gemini-cli" | "openai-native" | "moonshot" | "deepseek" | "deepinfra" | "doubao" | "qwen-code" | "unbound" | "requesty" | "human-relay" | "fake-ai" | "xai" | "groq" | "chutes" | "litellm" | "huggingface" | "cerebras" | "sambanova" | "zai" | "fireworks" | "featherless" | "io-intelligence" | "roo" | undefined;
        includeMaxTokens?: boolean | undefined;
        diffEnabled?: boolean | undefined;
        todoListEnabled?: boolean | undefined;
        fuzzyMatchThreshold?: number | undefined;
        modelTemperature?: number | null | undefined;
        rateLimitSeconds?: number | undefined;
        consecutiveMistakeLimit?: number | undefined;
        enableReasoningEffort?: boolean | undefined;
        modelMaxTokens?: number | undefined;
        modelMaxThinkingTokens?: number | undefined;
        verbosity?: "low" | "medium" | "high" | undefined;
        apiModelId?: string | undefined;
        apiKey?: string | undefined;
        anthropicBaseUrl?: string | undefined;
        anthropicUseAuthToken?: boolean | undefined;
        anthropicBeta1MContext?: boolean | undefined;
        claudeCodePath?: string | undefined;
        claudeCodeMaxOutputTokens?: number | undefined;
        glamaModelId?: string | undefined;
        glamaApiKey?: string | undefined;
        openRouterApiKey?: string | undefined;
        openRouterModelId?: string | undefined;
        openRouterBaseUrl?: string | undefined;
        openRouterSpecificProvider?: string | undefined;
        openRouterUseMiddleOutTransform?: boolean | undefined;
        awsAccessKey?: string | undefined;
        awsSecretKey?: string | undefined;
        awsSessionToken?: string | undefined;
        awsRegion?: string | undefined;
        awsUseCrossRegionInference?: boolean | undefined;
        awsUsePromptCache?: boolean | undefined;
        awsProfile?: string | undefined;
        awsUseProfile?: boolean | undefined;
        awsApiKey?: string | undefined;
        awsUseApiKey?: boolean | undefined;
        awsCustomArn?: string | undefined;
        awsModelContextWindow?: number | undefined;
        awsBedrockEndpointEnabled?: boolean | undefined;
        awsBedrockEndpoint?: string | undefined;
        awsBedrock1MContext?: boolean | undefined;
        vertexKeyFile?: string | undefined;
        vertexJsonCredentials?: string | undefined;
        vertexProjectId?: string | undefined;
        vertexRegion?: string | undefined;
        enableUrlContext?: boolean | undefined;
        enableGrounding?: boolean | undefined;
        openAiBaseUrl?: string | undefined;
        openAiApiKey?: string | undefined;
        openAiLegacyFormat?: boolean | undefined;
        openAiR1FormatEnabled?: boolean | undefined;
        openAiModelId?: string | undefined;
        openAiCustomModelInfo?: {
            contextWindow: number;
            supportsPromptCache: boolean;
            maxTokens?: number | null | undefined;
            maxThinkingTokens?: number | null | undefined;
            supportsImages?: boolean | undefined;
            supportsComputerUse?: boolean | undefined;
            supportsVerbosity?: boolean | undefined;
            supportsReasoningBudget?: boolean | undefined;
            supportsTemperature?: boolean | undefined;
            requiredReasoningBudget?: boolean | undefined;
            supportsReasoningEffort?: boolean | undefined;
            supportedParameters?: ("reasoning" | "max_tokens" | "temperature" | "include_reasoning")[] | undefined;
            inputPrice?: number | undefined;
            outputPrice?: number | undefined;
            cacheWritesPrice?: number | undefined;
            cacheReadsPrice?: number | undefined;
            description?: string | undefined;
            reasoningEffort?: "low" | "medium" | "high" | undefined;
            minTokensPerCachePoint?: number | undefined;
            maxCachePoints?: number | undefined;
            cachableFields?: string[] | undefined;
            tiers?: {
                contextWindow: number;
                name?: "default" | "flex" | "priority" | undefined;
                inputPrice?: number | undefined;
                outputPrice?: number | undefined;
                cacheWritesPrice?: number | undefined;
                cacheReadsPrice?: number | undefined;
            }[] | undefined;
        } | null | undefined;
        openAiUseAzure?: boolean | undefined;
        azureApiVersion?: string | undefined;
        openAiStreamingEnabled?: boolean | undefined;
        openAiHostHeader?: string | undefined;
        openAiHeaders?: Record<string, string> | undefined;
        ollamaModelId?: string | undefined;
        ollamaBaseUrl?: string | undefined;
        ollamaApiKey?: string | undefined;
        vsCodeLmModelSelector?: {
            id?: string | undefined;
            family?: string | undefined;
            version?: string | undefined;
            vendor?: string | undefined;
        } | undefined;
        lmStudioModelId?: string | undefined;
        lmStudioBaseUrl?: string | undefined;
        lmStudioDraftModelId?: string | undefined;
        lmStudioSpeculativeDecodingEnabled?: boolean | undefined;
        geminiApiKey?: string | undefined;
        googleGeminiBaseUrl?: string | undefined;
        geminiCliOAuthPath?: string | undefined;
        geminiCliProjectId?: string | undefined;
        openAiNativeApiKey?: string | undefined;
        openAiNativeBaseUrl?: string | undefined;
        openAiNativeServiceTier?: "default" | "flex" | "priority" | undefined;
        mistralApiKey?: string | undefined;
        mistralCodestralUrl?: string | undefined;
        deepSeekBaseUrl?: string | undefined;
        deepSeekApiKey?: string | undefined;
        deepInfraBaseUrl?: string | undefined;
        deepInfraApiKey?: string | undefined;
        deepInfraModelId?: string | undefined;
        doubaoBaseUrl?: string | undefined;
        doubaoApiKey?: string | undefined;
        moonshotBaseUrl?: "https://api.moonshot.ai/v1" | "https://api.moonshot.cn/v1" | undefined;
        moonshotApiKey?: string | undefined;
        unboundApiKey?: string | undefined;
        unboundModelId?: string | undefined;
        requestyBaseUrl?: string | undefined;
        requestyApiKey?: string | undefined;
        requestyModelId?: string | undefined;
        fakeAi?: unknown;
        xaiApiKey?: string | undefined;
        groqApiKey?: string | undefined;
        huggingFaceApiKey?: string | undefined;
        huggingFaceModelId?: string | undefined;
        huggingFaceInferenceProvider?: string | undefined;
        chutesApiKey?: string | undefined;
        litellmBaseUrl?: string | undefined;
        litellmApiKey?: string | undefined;
        litellmModelId?: string | undefined;
        litellmUsePromptCache?: boolean | undefined;
        cerebrasApiKey?: string | undefined;
        sambaNovaApiKey?: string | undefined;
        zaiApiKey?: string | undefined;
        zaiApiLine?: "china" | "international" | undefined;
        fireworksApiKey?: string | undefined;
        featherlessApiKey?: string | undefined;
        ioIntelligenceModelId?: string | undefined;
        ioIntelligenceApiKey?: string | undefined;
        qwenCodeOauthPath?: string | undefined;
        vercelAiGatewayApiKey?: string | undefined;
        vercelAiGatewayModelId?: string | undefined;
    }>;
    modeApiConfigs?: Record<string, string> | undefined;
    cloudProfileIds?: string[] | undefined;
    migrations?: {
        rateLimitSecondsMigrated?: boolean | undefined;
        diffSettingsMigrated?: boolean | undefined;
        openAiHeadersMigrated?: boolean | undefined;
        consecutiveMistakeLimitMigrated?: boolean | undefined;
        todoListEnabledMigrated?: boolean | undefined;
    } | undefined;
}, {
    currentApiConfigName: string;
    apiConfigs: Record<string, {
        id?: string | undefined;
        reasoningEffort?: "low" | "medium" | "high" | "minimal" | undefined;
        codebaseIndexOpenAiCompatibleBaseUrl?: string | undefined;
        codebaseIndexOpenAiCompatibleModelDimension?: number | undefined;
        codeIndexOpenAiKey?: string | undefined;
        codeIndexQdrantApiKey?: string | undefined;
        codebaseIndexOpenAiCompatibleApiKey?: string | undefined;
        codebaseIndexGeminiApiKey?: string | undefined;
        codebaseIndexMistralApiKey?: string | undefined;
        codebaseIndexVercelAiGatewayApiKey?: string | undefined;
        apiProvider?: "openai" | "anthropic" | "ollama" | "gemini" | "mistral" | "vercel-ai-gateway" | "claude-code" | "glama" | "openrouter" | "bedrock" | "vertex" | "vscode-lm" | "lmstudio" | "gemini-cli" | "openai-native" | "moonshot" | "deepseek" | "deepinfra" | "doubao" | "qwen-code" | "unbound" | "requesty" | "human-relay" | "fake-ai" | "xai" | "groq" | "chutes" | "litellm" | "huggingface" | "cerebras" | "sambanova" | "zai" | "fireworks" | "featherless" | "io-intelligence" | "roo" | undefined;
        includeMaxTokens?: boolean | undefined;
        diffEnabled?: boolean | undefined;
        todoListEnabled?: boolean | undefined;
        fuzzyMatchThreshold?: number | undefined;
        modelTemperature?: number | null | undefined;
        rateLimitSeconds?: number | undefined;
        consecutiveMistakeLimit?: number | undefined;
        enableReasoningEffort?: boolean | undefined;
        modelMaxTokens?: number | undefined;
        modelMaxThinkingTokens?: number | undefined;
        verbosity?: "low" | "medium" | "high" | undefined;
        apiModelId?: string | undefined;
        apiKey?: string | undefined;
        anthropicBaseUrl?: string | undefined;
        anthropicUseAuthToken?: boolean | undefined;
        anthropicBeta1MContext?: boolean | undefined;
        claudeCodePath?: string | undefined;
        claudeCodeMaxOutputTokens?: number | undefined;
        glamaModelId?: string | undefined;
        glamaApiKey?: string | undefined;
        openRouterApiKey?: string | undefined;
        openRouterModelId?: string | undefined;
        openRouterBaseUrl?: string | undefined;
        openRouterSpecificProvider?: string | undefined;
        openRouterUseMiddleOutTransform?: boolean | undefined;
        awsAccessKey?: string | undefined;
        awsSecretKey?: string | undefined;
        awsSessionToken?: string | undefined;
        awsRegion?: string | undefined;
        awsUseCrossRegionInference?: boolean | undefined;
        awsUsePromptCache?: boolean | undefined;
        awsProfile?: string | undefined;
        awsUseProfile?: boolean | undefined;
        awsApiKey?: string | undefined;
        awsUseApiKey?: boolean | undefined;
        awsCustomArn?: string | undefined;
        awsModelContextWindow?: number | undefined;
        awsBedrockEndpointEnabled?: boolean | undefined;
        awsBedrockEndpoint?: string | undefined;
        awsBedrock1MContext?: boolean | undefined;
        vertexKeyFile?: string | undefined;
        vertexJsonCredentials?: string | undefined;
        vertexProjectId?: string | undefined;
        vertexRegion?: string | undefined;
        enableUrlContext?: boolean | undefined;
        enableGrounding?: boolean | undefined;
        openAiBaseUrl?: string | undefined;
        openAiApiKey?: string | undefined;
        openAiLegacyFormat?: boolean | undefined;
        openAiR1FormatEnabled?: boolean | undefined;
        openAiModelId?: string | undefined;
        openAiCustomModelInfo?: {
            contextWindow: number;
            supportsPromptCache: boolean;
            maxTokens?: number | null | undefined;
            maxThinkingTokens?: number | null | undefined;
            supportsImages?: boolean | undefined;
            supportsComputerUse?: boolean | undefined;
            supportsVerbosity?: boolean | undefined;
            supportsReasoningBudget?: boolean | undefined;
            supportsTemperature?: boolean | undefined;
            requiredReasoningBudget?: boolean | undefined;
            supportsReasoningEffort?: boolean | undefined;
            supportedParameters?: ("reasoning" | "max_tokens" | "temperature" | "include_reasoning")[] | undefined;
            inputPrice?: number | undefined;
            outputPrice?: number | undefined;
            cacheWritesPrice?: number | undefined;
            cacheReadsPrice?: number | undefined;
            description?: string | undefined;
            reasoningEffort?: "low" | "medium" | "high" | undefined;
            minTokensPerCachePoint?: number | undefined;
            maxCachePoints?: number | undefined;
            cachableFields?: string[] | undefined;
            tiers?: {
                contextWindow: number;
                name?: "default" | "flex" | "priority" | undefined;
                inputPrice?: number | undefined;
                outputPrice?: number | undefined;
                cacheWritesPrice?: number | undefined;
                cacheReadsPrice?: number | undefined;
            }[] | undefined;
        } | null | undefined;
        openAiUseAzure?: boolean | undefined;
        azureApiVersion?: string | undefined;
        openAiStreamingEnabled?: boolean | undefined;
        openAiHostHeader?: string | undefined;
        openAiHeaders?: Record<string, string> | undefined;
        ollamaModelId?: string | undefined;
        ollamaBaseUrl?: string | undefined;
        ollamaApiKey?: string | undefined;
        vsCodeLmModelSelector?: {
            id?: string | undefined;
            family?: string | undefined;
            version?: string | undefined;
            vendor?: string | undefined;
        } | undefined;
        lmStudioModelId?: string | undefined;
        lmStudioBaseUrl?: string | undefined;
        lmStudioDraftModelId?: string | undefined;
        lmStudioSpeculativeDecodingEnabled?: boolean | undefined;
        geminiApiKey?: string | undefined;
        googleGeminiBaseUrl?: string | undefined;
        geminiCliOAuthPath?: string | undefined;
        geminiCliProjectId?: string | undefined;
        openAiNativeApiKey?: string | undefined;
        openAiNativeBaseUrl?: string | undefined;
        openAiNativeServiceTier?: "default" | "flex" | "priority" | undefined;
        mistralApiKey?: string | undefined;
        mistralCodestralUrl?: string | undefined;
        deepSeekBaseUrl?: string | undefined;
        deepSeekApiKey?: string | undefined;
        deepInfraBaseUrl?: string | undefined;
        deepInfraApiKey?: string | undefined;
        deepInfraModelId?: string | undefined;
        doubaoBaseUrl?: string | undefined;
        doubaoApiKey?: string | undefined;
        moonshotBaseUrl?: "https://api.moonshot.ai/v1" | "https://api.moonshot.cn/v1" | undefined;
        moonshotApiKey?: string | undefined;
        unboundApiKey?: string | undefined;
        unboundModelId?: string | undefined;
        requestyBaseUrl?: string | undefined;
        requestyApiKey?: string | undefined;
        requestyModelId?: string | undefined;
        fakeAi?: unknown;
        xaiApiKey?: string | undefined;
        groqApiKey?: string | undefined;
        huggingFaceApiKey?: string | undefined;
        huggingFaceModelId?: string | undefined;
        huggingFaceInferenceProvider?: string | undefined;
        chutesApiKey?: string | undefined;
        litellmBaseUrl?: string | undefined;
        litellmApiKey?: string | undefined;
        litellmModelId?: string | undefined;
        litellmUsePromptCache?: boolean | undefined;
        cerebrasApiKey?: string | undefined;
        sambaNovaApiKey?: string | undefined;
        zaiApiKey?: string | undefined;
        zaiApiLine?: "china" | "international" | undefined;
        fireworksApiKey?: string | undefined;
        featherlessApiKey?: string | undefined;
        ioIntelligenceModelId?: string | undefined;
        ioIntelligenceApiKey?: string | undefined;
        qwenCodeOauthPath?: string | undefined;
        vercelAiGatewayApiKey?: string | undefined;
        vercelAiGatewayModelId?: string | undefined;
    }>;
    modeApiConfigs?: Record<string, string> | undefined;
    cloudProfileIds?: string[] | undefined;
    migrations?: {
        rateLimitSecondsMigrated?: boolean | undefined;
        diffSettingsMigrated?: boolean | undefined;
        openAiHeadersMigrated?: boolean | undefined;
        consecutiveMistakeLimitMigrated?: boolean | undefined;
        todoListEnabledMigrated?: boolean | undefined;
    } | undefined;
}>;
export type ProviderProfiles = z.infer<typeof providerProfilesSchema>;
export declare class ProviderSettingsManager {
    private static readonly SCOPE_PREFIX;
    private readonly defaultConfigId;
    private readonly defaultModeApiConfigs;
    private readonly defaultProviderProfiles;
    private readonly context;
    constructor(context: ExtensionContext);
    generateId(): string;
    private _lock;
    private lock;
    /**
     * Initialize config if it doesn't exist and run migrations.
     */
    initialize(): Promise<void>;
    private migrateRateLimitSeconds;
    private migrateDiffSettings;
    private migrateOpenAiHeaders;
    private migrateConsecutiveMistakeLimit;
    private migrateTodoListEnabled;
    /**
     * Clean model ID by removing prefix before "/"
     */
    private cleanModelId;
    /**
     * List all available configs with metadata.
     */
    listConfig(): Promise<ProviderSettingsEntry[]>;
    /**
     * Save a config with the given name.
     * Preserves the ID from the input 'config' object if it exists,
     * otherwise generates a new one (for creation scenarios).
     */
    saveConfig(name: string, config: ProviderSettingsWithId): Promise<string>;
    getProfile(params: {
        name: string;
    } | {
        id: string;
    }): Promise<ProviderSettingsWithId & {
        name: string;
    }>;
    /**
     * Activate a profile by name or ID.
     */
    activateProfile(params: {
        name: string;
    } | {
        id: string;
    }): Promise<ProviderSettingsWithId & {
        name: string;
    }>;
    /**
     * Delete a config by name.
     */
    deleteConfig(name: string): Promise<void>;
    /**
     * Check if a config exists by name.
     */
    hasConfig(name: string): Promise<boolean>;
    /**
     * Set the API config for a specific mode.
     */
    setModeConfig(mode: Mode, configId: string): Promise<void>;
    /**
     * Get the API config ID for a specific mode.
     */
    getModeConfigId(mode: Mode): Promise<string | undefined>;
    export(): Promise<{
        currentApiConfigName: string;
        apiConfigs: Record<string, {
            id?: string | undefined;
            reasoningEffort?: "low" | "medium" | "high" | "minimal" | undefined;
            codebaseIndexOpenAiCompatibleBaseUrl?: string | undefined;
            codebaseIndexOpenAiCompatibleModelDimension?: number | undefined;
            codeIndexOpenAiKey?: string | undefined;
            codeIndexQdrantApiKey?: string | undefined;
            codebaseIndexOpenAiCompatibleApiKey?: string | undefined;
            codebaseIndexGeminiApiKey?: string | undefined;
            codebaseIndexMistralApiKey?: string | undefined;
            codebaseIndexVercelAiGatewayApiKey?: string | undefined;
            apiProvider?: "openai" | "anthropic" | "ollama" | "gemini" | "mistral" | "vercel-ai-gateway" | "claude-code" | "glama" | "openrouter" | "bedrock" | "vertex" | "vscode-lm" | "lmstudio" | "gemini-cli" | "openai-native" | "moonshot" | "deepseek" | "deepinfra" | "doubao" | "qwen-code" | "unbound" | "requesty" | "human-relay" | "fake-ai" | "xai" | "groq" | "chutes" | "litellm" | "huggingface" | "cerebras" | "sambanova" | "zai" | "fireworks" | "featherless" | "io-intelligence" | "roo" | undefined;
            includeMaxTokens?: boolean | undefined;
            diffEnabled?: boolean | undefined;
            todoListEnabled?: boolean | undefined;
            fuzzyMatchThreshold?: number | undefined;
            modelTemperature?: number | null | undefined;
            rateLimitSeconds?: number | undefined;
            consecutiveMistakeLimit?: number | undefined;
            enableReasoningEffort?: boolean | undefined;
            modelMaxTokens?: number | undefined;
            modelMaxThinkingTokens?: number | undefined;
            verbosity?: "low" | "medium" | "high" | undefined;
            apiModelId?: string | undefined;
            apiKey?: string | undefined;
            anthropicBaseUrl?: string | undefined;
            anthropicUseAuthToken?: boolean | undefined;
            anthropicBeta1MContext?: boolean | undefined;
            claudeCodePath?: string | undefined;
            claudeCodeMaxOutputTokens?: number | undefined;
            glamaModelId?: string | undefined;
            glamaApiKey?: string | undefined;
            openRouterApiKey?: string | undefined;
            openRouterModelId?: string | undefined;
            openRouterBaseUrl?: string | undefined;
            openRouterSpecificProvider?: string | undefined;
            openRouterUseMiddleOutTransform?: boolean | undefined;
            awsAccessKey?: string | undefined;
            awsSecretKey?: string | undefined;
            awsSessionToken?: string | undefined;
            awsRegion?: string | undefined;
            awsUseCrossRegionInference?: boolean | undefined;
            awsUsePromptCache?: boolean | undefined;
            awsProfile?: string | undefined;
            awsUseProfile?: boolean | undefined;
            awsApiKey?: string | undefined;
            awsUseApiKey?: boolean | undefined;
            awsCustomArn?: string | undefined;
            awsModelContextWindow?: number | undefined;
            awsBedrockEndpointEnabled?: boolean | undefined;
            awsBedrockEndpoint?: string | undefined;
            awsBedrock1MContext?: boolean | undefined;
            vertexKeyFile?: string | undefined;
            vertexJsonCredentials?: string | undefined;
            vertexProjectId?: string | undefined;
            vertexRegion?: string | undefined;
            enableUrlContext?: boolean | undefined;
            enableGrounding?: boolean | undefined;
            openAiBaseUrl?: string | undefined;
            openAiApiKey?: string | undefined;
            openAiLegacyFormat?: boolean | undefined;
            openAiR1FormatEnabled?: boolean | undefined;
            openAiModelId?: string | undefined;
            openAiCustomModelInfo?: {
                contextWindow: number;
                supportsPromptCache: boolean;
                maxTokens?: number | null | undefined;
                maxThinkingTokens?: number | null | undefined;
                supportsImages?: boolean | undefined;
                supportsComputerUse?: boolean | undefined;
                supportsVerbosity?: boolean | undefined;
                supportsReasoningBudget?: boolean | undefined;
                supportsTemperature?: boolean | undefined;
                requiredReasoningBudget?: boolean | undefined;
                supportsReasoningEffort?: boolean | undefined;
                supportedParameters?: ("reasoning" | "max_tokens" | "temperature" | "include_reasoning")[] | undefined;
                inputPrice?: number | undefined;
                outputPrice?: number | undefined;
                cacheWritesPrice?: number | undefined;
                cacheReadsPrice?: number | undefined;
                description?: string | undefined;
                reasoningEffort?: "low" | "medium" | "high" | undefined;
                minTokensPerCachePoint?: number | undefined;
                maxCachePoints?: number | undefined;
                cachableFields?: string[] | undefined;
                tiers?: {
                    contextWindow: number;
                    name?: "default" | "flex" | "priority" | undefined;
                    inputPrice?: number | undefined;
                    outputPrice?: number | undefined;
                    cacheWritesPrice?: number | undefined;
                    cacheReadsPrice?: number | undefined;
                }[] | undefined;
            } | null | undefined;
            openAiUseAzure?: boolean | undefined;
            azureApiVersion?: string | undefined;
            openAiStreamingEnabled?: boolean | undefined;
            openAiHostHeader?: string | undefined;
            openAiHeaders?: Record<string, string> | undefined;
            ollamaModelId?: string | undefined;
            ollamaBaseUrl?: string | undefined;
            ollamaApiKey?: string | undefined;
            vsCodeLmModelSelector?: {
                id?: string | undefined;
                family?: string | undefined;
                version?: string | undefined;
                vendor?: string | undefined;
            } | undefined;
            lmStudioModelId?: string | undefined;
            lmStudioBaseUrl?: string | undefined;
            lmStudioDraftModelId?: string | undefined;
            lmStudioSpeculativeDecodingEnabled?: boolean | undefined;
            geminiApiKey?: string | undefined;
            googleGeminiBaseUrl?: string | undefined;
            geminiCliOAuthPath?: string | undefined;
            geminiCliProjectId?: string | undefined;
            openAiNativeApiKey?: string | undefined;
            openAiNativeBaseUrl?: string | undefined;
            openAiNativeServiceTier?: "default" | "flex" | "priority" | undefined;
            mistralApiKey?: string | undefined;
            mistralCodestralUrl?: string | undefined;
            deepSeekBaseUrl?: string | undefined;
            deepSeekApiKey?: string | undefined;
            deepInfraBaseUrl?: string | undefined;
            deepInfraApiKey?: string | undefined;
            deepInfraModelId?: string | undefined;
            doubaoBaseUrl?: string | undefined;
            doubaoApiKey?: string | undefined;
            moonshotBaseUrl?: "https://api.moonshot.ai/v1" | "https://api.moonshot.cn/v1" | undefined;
            moonshotApiKey?: string | undefined;
            unboundApiKey?: string | undefined;
            unboundModelId?: string | undefined;
            requestyBaseUrl?: string | undefined;
            requestyApiKey?: string | undefined;
            requestyModelId?: string | undefined;
            fakeAi?: unknown;
            xaiApiKey?: string | undefined;
            groqApiKey?: string | undefined;
            huggingFaceApiKey?: string | undefined;
            huggingFaceModelId?: string | undefined;
            huggingFaceInferenceProvider?: string | undefined;
            chutesApiKey?: string | undefined;
            litellmBaseUrl?: string | undefined;
            litellmApiKey?: string | undefined;
            litellmModelId?: string | undefined;
            litellmUsePromptCache?: boolean | undefined;
            cerebrasApiKey?: string | undefined;
            sambaNovaApiKey?: string | undefined;
            zaiApiKey?: string | undefined;
            zaiApiLine?: "china" | "international" | undefined;
            fireworksApiKey?: string | undefined;
            featherlessApiKey?: string | undefined;
            ioIntelligenceModelId?: string | undefined;
            ioIntelligenceApiKey?: string | undefined;
            qwenCodeOauthPath?: string | undefined;
            vercelAiGatewayApiKey?: string | undefined;
            vercelAiGatewayModelId?: string | undefined;
        }>;
        modeApiConfigs?: Record<string, string> | undefined;
        cloudProfileIds?: string[] | undefined;
        migrations?: {
            rateLimitSecondsMigrated?: boolean | undefined;
            diffSettingsMigrated?: boolean | undefined;
            openAiHeadersMigrated?: boolean | undefined;
            consecutiveMistakeLimitMigrated?: boolean | undefined;
            todoListEnabledMigrated?: boolean | undefined;
        } | undefined;
    }>;
    import(providerProfiles: ProviderProfiles): Promise<void>;
    /**
     * Reset provider profiles by deleting them from secrets.
     */
    resetAllConfigs(): Promise<void>;
    private get secretsKey();
    private load;
    private store;
    private findUniqueProfileName;
    syncCloudProfiles(cloudProfiles: Record<string, ProviderSettingsWithId>, currentActiveProfileName?: string): Promise<SyncCloudProfilesResult>;
}
