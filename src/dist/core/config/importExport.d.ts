import * as vscode from "vscode";
import { ProviderSettingsManager } from "./ProviderSettingsManager";
import { ContextProxy } from "./ContextProxy";
import { CustomModesManager } from "./CustomModesManager";
export type ImportOptions = {
    providerSettingsManager: ProviderSettingsManager;
    contextProxy: ContextProxy;
    customModesManager: CustomModesManager;
};
type ExportOptions = {
    providerSettingsManager: ProviderSettingsManager;
    contextProxy: ContextProxy;
};
type ImportWithProviderOptions = ImportOptions & {
    provider: {
        settingsImportedAt?: number;
        postStateToWebview: () => Promise<void>;
    };
};
/**
 * Imports configuration from a specific file path
 * Shares base functionality for import settings for both the manual
 * and automatic settings importing
 */
export declare function importSettingsFromPath(filePath: string, { providerSettingsManager, contextProxy, customModesManager }: ImportOptions): Promise<{
    providerProfiles: {
        currentApiConfigName: string;
        apiConfigs: {
            [x: string]: {
                id?: string | undefined;
                reasoningEffort?: "low" | "medium" | "high" | "minimal" | undefined;
                codebaseIndexOpenAiCompatibleBaseUrl?: string | undefined;
                codebaseIndexOpenAiCompatibleModelDimension?: number | undefined;
                codeIndexOpenAiKey?: string | undefined;
                codeIndexQdrantApiKey?: string | undefined;
                codebaseIndexOpenAiCompatibleApiKey?: string | undefined;
                codebaseIndexGeminiApiKey?: string | undefined;
                codebaseIndexMistralApiKey?: string | undefined;
                codebaseIndexVercelAiGatewayApiKey?: string | undefined;
                apiProvider?: "openai" | "anthropic" | "ollama" | "gemini" | "mistral" | "vercel-ai-gateway" | "claude-code" | "glama" | "openrouter" | "bedrock" | "vertex" | "vscode-lm" | "lmstudio" | "gemini-cli" | "openai-native" | "moonshot" | "deepseek" | "deepinfra" | "doubao" | "qwen-code" | "unbound" | "requesty" | "human-relay" | "fake-ai" | "xai" | "groq" | "chutes" | "litellm" | "huggingface" | "cerebras" | "sambanova" | "zai" | "fireworks" | "featherless" | "io-intelligence" | "roo" | undefined;
                includeMaxTokens?: boolean | undefined;
                diffEnabled?: boolean | undefined;
                todoListEnabled?: boolean | undefined;
                fuzzyMatchThreshold?: number | undefined;
                modelTemperature?: number | null | undefined;
                rateLimitSeconds?: number | undefined;
                consecutiveMistakeLimit?: number | undefined;
                enableReasoningEffort?: boolean | undefined;
                modelMaxTokens?: number | undefined;
                modelMaxThinkingTokens?: number | undefined;
                verbosity?: "low" | "medium" | "high" | undefined;
                apiModelId?: string | undefined;
                apiKey?: string | undefined;
                anthropicBaseUrl?: string | undefined;
                anthropicUseAuthToken?: boolean | undefined;
                anthropicBeta1MContext?: boolean | undefined;
                claudeCodePath?: string | undefined;
                claudeCodeMaxOutputTokens?: number | undefined;
                glamaModelId?: string | undefined;
                glamaApiKey?: string | undefined;
                openRouterApiKey?: string | undefined;
                openRouterModelId?: string | undefined;
                openRouterBaseUrl?: string | undefined;
                openRouterSpecificProvider?: string | undefined;
                openRouterUseMiddleOutTransform?: boolean | undefined;
                awsAccessKey?: string | undefined;
                awsSecretKey?: string | undefined;
                awsSessionToken?: string | undefined;
                awsRegion?: string | undefined;
                awsUseCrossRegionInference?: boolean | undefined;
                awsUsePromptCache?: boolean | undefined;
                awsProfile?: string | undefined;
                awsUseProfile?: boolean | undefined;
                awsApiKey?: string | undefined;
                awsUseApiKey?: boolean | undefined;
                awsCustomArn?: string | undefined;
                awsModelContextWindow?: number | undefined;
                awsBedrockEndpointEnabled?: boolean | undefined;
                awsBedrockEndpoint?: string | undefined;
                awsBedrock1MContext?: boolean | undefined;
                vertexKeyFile?: string | undefined;
                vertexJsonCredentials?: string | undefined;
                vertexProjectId?: string | undefined;
                vertexRegion?: string | undefined;
                enableUrlContext?: boolean | undefined;
                enableGrounding?: boolean | undefined;
                openAiBaseUrl?: string | undefined;
                openAiApiKey?: string | undefined;
                openAiLegacyFormat?: boolean | undefined;
                openAiR1FormatEnabled?: boolean | undefined;
                openAiModelId?: string | undefined;
                openAiCustomModelInfo?: {
                    contextWindow: number;
                    supportsPromptCache: boolean;
                    maxTokens?: number | null | undefined;
                    maxThinkingTokens?: number | null | undefined;
                    supportsImages?: boolean | undefined;
                    supportsComputerUse?: boolean | undefined;
                    supportsVerbosity?: boolean | undefined;
                    supportsReasoningBudget?: boolean | undefined;
                    supportsTemperature?: boolean | undefined;
                    requiredReasoningBudget?: boolean | undefined;
                    supportsReasoningEffort?: boolean | undefined;
                    supportedParameters?: ("reasoning" | "max_tokens" | "temperature" | "include_reasoning")[] | undefined;
                    inputPrice?: number | undefined;
                    outputPrice?: number | undefined;
                    cacheWritesPrice?: number | undefined;
                    cacheReadsPrice?: number | undefined;
                    description?: string | undefined;
                    reasoningEffort?: "low" | "medium" | "high" | undefined;
                    minTokensPerCachePoint?: number | undefined;
                    maxCachePoints?: number | undefined;
                    cachableFields?: string[] | undefined;
                    tiers?: {
                        contextWindow: number;
                        name?: "default" | "flex" | "priority" | undefined;
                        inputPrice?: number | undefined;
                        outputPrice?: number | undefined;
                        cacheWritesPrice?: number | undefined;
                        cacheReadsPrice?: number | undefined;
                    }[] | undefined;
                } | null | undefined;
                openAiUseAzure?: boolean | undefined;
                azureApiVersion?: string | undefined;
                openAiStreamingEnabled?: boolean | undefined;
                openAiHostHeader?: string | undefined;
                openAiHeaders?: Record<string, string> | undefined;
                ollamaModelId?: string | undefined;
                ollamaBaseUrl?: string | undefined;
                ollamaApiKey?: string | undefined;
                vsCodeLmModelSelector?: {
                    id?: string | undefined;
                    family?: string | undefined;
                    version?: string | undefined;
                    vendor?: string | undefined;
                } | undefined;
                lmStudioModelId?: string | undefined;
                lmStudioBaseUrl?: string | undefined;
                lmStudioDraftModelId?: string | undefined;
                lmStudioSpeculativeDecodingEnabled?: boolean | undefined;
                geminiApiKey?: string | undefined;
                googleGeminiBaseUrl?: string | undefined;
                geminiCliOAuthPath?: string | undefined;
                geminiCliProjectId?: string | undefined;
                openAiNativeApiKey?: string | undefined;
                openAiNativeBaseUrl?: string | undefined;
                openAiNativeServiceTier?: "default" | "flex" | "priority" | undefined;
                mistralApiKey?: string | undefined;
                mistralCodestralUrl?: string | undefined;
                deepSeekBaseUrl?: string | undefined;
                deepSeekApiKey?: string | undefined;
                deepInfraBaseUrl?: string | undefined;
                deepInfraApiKey?: string | undefined;
                deepInfraModelId?: string | undefined;
                doubaoBaseUrl?: string | undefined;
                doubaoApiKey?: string | undefined;
                moonshotBaseUrl?: "https://api.moonshot.ai/v1" | "https://api.moonshot.cn/v1" | undefined;
                moonshotApiKey?: string | undefined;
                unboundApiKey?: string | undefined;
                unboundModelId?: string | undefined;
                requestyBaseUrl?: string | undefined;
                requestyApiKey?: string | undefined;
                requestyModelId?: string | undefined;
                fakeAi?: unknown;
                xaiApiKey?: string | undefined;
                groqApiKey?: string | undefined;
                huggingFaceApiKey?: string | undefined;
                huggingFaceModelId?: string | undefined;
                huggingFaceInferenceProvider?: string | undefined;
                chutesApiKey?: string | undefined;
                litellmBaseUrl?: string | undefined;
                litellmApiKey?: string | undefined;
                litellmModelId?: string | undefined;
                litellmUsePromptCache?: boolean | undefined;
                cerebrasApiKey?: string | undefined;
                sambaNovaApiKey?: string | undefined;
                zaiApiKey?: string | undefined;
                zaiApiLine?: "china" | "international" | undefined;
                fireworksApiKey?: string | undefined;
                featherlessApiKey?: string | undefined;
                ioIntelligenceModelId?: string | undefined;
                ioIntelligenceApiKey?: string | undefined;
                qwenCodeOauthPath?: string | undefined;
                vercelAiGatewayApiKey?: string | undefined;
                vercelAiGatewayModelId?: string | undefined;
            };
        };
        modeApiConfigs: {
            [x: string]: string;
        };
    };
    globalSettings: {
        diffEnabled?: boolean | undefined;
        fuzzyMatchThreshold?: number | undefined;
        rateLimitSeconds?: number | undefined;
        mode?: string | undefined;
        language?: "id" | "ca" | "de" | "en" | "es" | "fr" | "hi" | "it" | "ja" | "ko" | "nl" | "pl" | "pt-BR" | "ru" | "tr" | "vi" | "zh-CN" | "zh-TW" | undefined;
        customInstructions?: string | undefined;
        customModes?: {
            name: string;
            slug: string;
            roleDefinition: string;
            groups: ("command" | "read" | "edit" | "browser" | "mcp" | "modes" | ["command" | "read" | "edit" | "browser" | "mcp" | "modes", {
                description?: string | undefined;
                fileRegex?: string | undefined;
            }])[];
            description?: string | undefined;
            whenToUse?: string | undefined;
            customInstructions?: string | undefined;
            source?: "global" | "project" | undefined;
        }[] | undefined;
        currentApiConfigName?: string | undefined;
        listApiConfigMeta?: {
            id: string;
            name: string;
            apiProvider?: "openai" | "anthropic" | "ollama" | "gemini" | "mistral" | "vercel-ai-gateway" | "claude-code" | "glama" | "openrouter" | "bedrock" | "vertex" | "vscode-lm" | "lmstudio" | "gemini-cli" | "openai-native" | "moonshot" | "deepseek" | "deepinfra" | "doubao" | "qwen-code" | "unbound" | "requesty" | "human-relay" | "fake-ai" | "xai" | "groq" | "chutes" | "litellm" | "huggingface" | "cerebras" | "sambanova" | "zai" | "fireworks" | "featherless" | "io-intelligence" | "roo" | undefined;
            modelId?: string | undefined;
        }[] | undefined;
        pinnedApiConfigs?: Record<string, boolean> | undefined;
        lastShownAnnouncementId?: string | undefined;
        taskHistory?: {
            number: number;
            ts: number;
            totalCost: number;
            id: string;
            task: string;
            tokensIn: number;
            tokensOut: number;
            rootTaskId?: string | undefined;
            parentTaskId?: string | undefined;
            cacheWrites?: number | undefined;
            cacheReads?: number | undefined;
            size?: number | undefined;
            workspace?: string | undefined;
            mode?: string | undefined;
        }[] | undefined;
        dismissedUpsells?: string[] | undefined;
        openRouterImageApiKey?: string | undefined;
        openRouterImageGenerationSelectedModel?: string | undefined;
        condensingApiConfigId?: string | undefined;
        customCondensingPrompt?: string | undefined;
        autoApprovalEnabled?: boolean | undefined;
        alwaysAllowReadOnly?: boolean | undefined;
        alwaysAllowReadOnlyOutsideWorkspace?: boolean | undefined;
        alwaysAllowWrite?: boolean | undefined;
        alwaysAllowWriteOutsideWorkspace?: boolean | undefined;
        alwaysAllowWriteProtected?: boolean | undefined;
        writeDelayMs?: number | undefined;
        alwaysAllowBrowser?: boolean | undefined;
        alwaysApproveResubmit?: boolean | undefined;
        requestDelaySeconds?: number | undefined;
        alwaysAllowMcp?: boolean | undefined;
        alwaysAllowModeSwitch?: boolean | undefined;
        alwaysAllowSubtasks?: boolean | undefined;
        alwaysAllowExecute?: boolean | undefined;
        alwaysAllowFollowupQuestions?: boolean | undefined;
        followupAutoApproveTimeoutMs?: number | undefined;
        alwaysAllowUpdateTodoList?: boolean | undefined;
        allowedCommands?: string[] | undefined;
        deniedCommands?: string[] | undefined;
        commandExecutionTimeout?: number | undefined;
        commandTimeoutAllowlist?: string[] | undefined;
        preventCompletionWithOpenTodos?: boolean | undefined;
        allowedMaxRequests?: number | null | undefined;
        allowedMaxCost?: number | null | undefined;
        autoCondenseContext?: boolean | undefined;
        autoCondenseContextPercent?: number | undefined;
        maxConcurrentFileReads?: number | undefined;
        includeDiagnosticMessages?: boolean | undefined;
        maxDiagnosticMessages?: number | undefined;
        browserToolEnabled?: boolean | undefined;
        browserViewportSize?: string | undefined;
        screenshotQuality?: number | undefined;
        remoteBrowserEnabled?: boolean | undefined;
        remoteBrowserHost?: string | undefined;
        cachedChromeHostUrl?: string | undefined;
        enableCheckpoints?: boolean | undefined;
        ttsEnabled?: boolean | undefined;
        ttsSpeed?: number | undefined;
        soundEnabled?: boolean | undefined;
        soundVolume?: number | undefined;
        maxOpenTabsContext?: number | undefined;
        maxWorkspaceFiles?: number | undefined;
        showRooIgnoredFiles?: boolean | undefined;
        maxReadFileLine?: number | undefined;
        maxImageFileSize?: number | undefined;
        maxTotalImageSize?: number | undefined;
        terminalOutputLineLimit?: number | undefined;
        terminalOutputCharacterLimit?: number | undefined;
        terminalShellIntegrationTimeout?: number | undefined;
        terminalShellIntegrationDisabled?: boolean | undefined;
        terminalCommandDelay?: number | undefined;
        terminalPowershellCounter?: boolean | undefined;
        terminalZshClearEolMark?: boolean | undefined;
        terminalZshOhMy?: boolean | undefined;
        terminalZshP10k?: boolean | undefined;
        terminalZdotdir?: boolean | undefined;
        terminalCompressProgressBar?: boolean | undefined;
        diagnosticsEnabled?: boolean | undefined;
        experiments?: {
            powerSteering?: boolean | undefined;
            multiFileApplyDiff?: boolean | undefined;
            preventFocusDisruption?: boolean | undefined;
            imageGeneration?: boolean | undefined;
            runSlashCommand?: boolean | undefined;
        } | undefined;
        codebaseIndexModels?: {
            openai?: Record<string, {
                dimension: number;
            }> | undefined;
            ollama?: Record<string, {
                dimension: number;
            }> | undefined;
            "openai-compatible"?: Record<string, {
                dimension: number;
            }> | undefined;
            gemini?: Record<string, {
                dimension: number;
            }> | undefined;
            mistral?: Record<string, {
                dimension: number;
            }> | undefined;
            "vercel-ai-gateway"?: Record<string, {
                dimension: number;
            }> | undefined;
        } | undefined;
        codebaseIndexConfig?: {
            codebaseIndexEnabled?: boolean | undefined;
            codebaseIndexQdrantUrl?: string | undefined;
            codebaseIndexEmbedderProvider?: "openai" | "ollama" | "openai-compatible" | "gemini" | "mistral" | "vercel-ai-gateway" | undefined;
            codebaseIndexEmbedderBaseUrl?: string | undefined;
            codebaseIndexEmbedderModelId?: string | undefined;
            codebaseIndexEmbedderModelDimension?: number | undefined;
            codebaseIndexSearchMinScore?: number | undefined;
            codebaseIndexSearchMaxResults?: number | undefined;
            codebaseIndexOpenAiCompatibleBaseUrl?: string | undefined;
            codebaseIndexOpenAiCompatibleModelDimension?: number | undefined;
        } | undefined;
        telemetrySetting?: "unset" | "enabled" | "disabled" | undefined;
        mcpEnabled?: boolean | undefined;
        enableMcpServerCreation?: boolean | undefined;
        modeApiConfigs?: Record<string, string> | undefined;
        customModePrompts?: Record<string, {
            description?: string | undefined;
            roleDefinition?: string | undefined;
            whenToUse?: string | undefined;
            customInstructions?: string | undefined;
        } | undefined> | undefined;
        customSupportPrompts?: Record<string, string | undefined> | undefined;
        enhancementApiConfigId?: string | undefined;
        includeTaskHistoryInEnhance?: boolean | undefined;
        historyPreviewCollapsed?: boolean | undefined;
        profileThresholds?: Record<string, number> | undefined;
        hasOpenedModeSelector?: boolean | undefined;
        lastModeExportPath?: string | undefined;
        lastModeImportPath?: string | undefined;
    };
    success: boolean;
    readonly error?: undefined;
} | {
    success: boolean;
    error: string;
    providerProfiles?: undefined;
    globalSettings?: undefined;
}>;
/**
 * Import settings from a file using a file dialog
 * @param options - Import options containing managers and proxy
 * @returns Promise resolving to import result
 */
export declare const importSettings: ({ providerSettingsManager, contextProxy, customModesManager }: ImportOptions) => Promise<{
    providerProfiles: {
        currentApiConfigName: string;
        apiConfigs: {
            [x: string]: {
                id?: string | undefined;
                reasoningEffort?: "low" | "medium" | "high" | "minimal" | undefined;
                codebaseIndexOpenAiCompatibleBaseUrl?: string | undefined;
                codebaseIndexOpenAiCompatibleModelDimension?: number | undefined;
                codeIndexOpenAiKey?: string | undefined;
                codeIndexQdrantApiKey?: string | undefined;
                codebaseIndexOpenAiCompatibleApiKey?: string | undefined;
                codebaseIndexGeminiApiKey?: string | undefined;
                codebaseIndexMistralApiKey?: string | undefined;
                codebaseIndexVercelAiGatewayApiKey?: string | undefined;
                apiProvider?: "openai" | "anthropic" | "ollama" | "gemini" | "mistral" | "vercel-ai-gateway" | "claude-code" | "glama" | "openrouter" | "bedrock" | "vertex" | "vscode-lm" | "lmstudio" | "gemini-cli" | "openai-native" | "moonshot" | "deepseek" | "deepinfra" | "doubao" | "qwen-code" | "unbound" | "requesty" | "human-relay" | "fake-ai" | "xai" | "groq" | "chutes" | "litellm" | "huggingface" | "cerebras" | "sambanova" | "zai" | "fireworks" | "featherless" | "io-intelligence" | "roo" | undefined;
                includeMaxTokens?: boolean | undefined;
                diffEnabled?: boolean | undefined;
                todoListEnabled?: boolean | undefined;
                fuzzyMatchThreshold?: number | undefined;
                modelTemperature?: number | null | undefined;
                rateLimitSeconds?: number | undefined;
                consecutiveMistakeLimit?: number | undefined;
                enableReasoningEffort?: boolean | undefined;
                modelMaxTokens?: number | undefined;
                modelMaxThinkingTokens?: number | undefined;
                verbosity?: "low" | "medium" | "high" | undefined;
                apiModelId?: string | undefined;
                apiKey?: string | undefined;
                anthropicBaseUrl?: string | undefined;
                anthropicUseAuthToken?: boolean | undefined;
                anthropicBeta1MContext?: boolean | undefined;
                claudeCodePath?: string | undefined;
                claudeCodeMaxOutputTokens?: number | undefined;
                glamaModelId?: string | undefined;
                glamaApiKey?: string | undefined;
                openRouterApiKey?: string | undefined;
                openRouterModelId?: string | undefined;
                openRouterBaseUrl?: string | undefined;
                openRouterSpecificProvider?: string | undefined;
                openRouterUseMiddleOutTransform?: boolean | undefined;
                awsAccessKey?: string | undefined;
                awsSecretKey?: string | undefined;
                awsSessionToken?: string | undefined;
                awsRegion?: string | undefined;
                awsUseCrossRegionInference?: boolean | undefined;
                awsUsePromptCache?: boolean | undefined;
                awsProfile?: string | undefined;
                awsUseProfile?: boolean | undefined;
                awsApiKey?: string | undefined;
                awsUseApiKey?: boolean | undefined;
                awsCustomArn?: string | undefined;
                awsModelContextWindow?: number | undefined;
                awsBedrockEndpointEnabled?: boolean | undefined;
                awsBedrockEndpoint?: string | undefined;
                awsBedrock1MContext?: boolean | undefined;
                vertexKeyFile?: string | undefined;
                vertexJsonCredentials?: string | undefined;
                vertexProjectId?: string | undefined;
                vertexRegion?: string | undefined;
                enableUrlContext?: boolean | undefined;
                enableGrounding?: boolean | undefined;
                openAiBaseUrl?: string | undefined;
                openAiApiKey?: string | undefined;
                openAiLegacyFormat?: boolean | undefined;
                openAiR1FormatEnabled?: boolean | undefined;
                openAiModelId?: string | undefined;
                openAiCustomModelInfo?: {
                    contextWindow: number;
                    supportsPromptCache: boolean;
                    maxTokens?: number | null | undefined;
                    maxThinkingTokens?: number | null | undefined;
                    supportsImages?: boolean | undefined;
                    supportsComputerUse?: boolean | undefined;
                    supportsVerbosity?: boolean | undefined;
                    supportsReasoningBudget?: boolean | undefined;
                    supportsTemperature?: boolean | undefined;
                    requiredReasoningBudget?: boolean | undefined;
                    supportsReasoningEffort?: boolean | undefined;
                    supportedParameters?: ("reasoning" | "max_tokens" | "temperature" | "include_reasoning")[] | undefined;
                    inputPrice?: number | undefined;
                    outputPrice?: number | undefined;
                    cacheWritesPrice?: number | undefined;
                    cacheReadsPrice?: number | undefined;
                    description?: string | undefined;
                    reasoningEffort?: "low" | "medium" | "high" | undefined;
                    minTokensPerCachePoint?: number | undefined;
                    maxCachePoints?: number | undefined;
                    cachableFields?: string[] | undefined;
                    tiers?: {
                        contextWindow: number;
                        name?: "default" | "flex" | "priority" | undefined;
                        inputPrice?: number | undefined;
                        outputPrice?: number | undefined;
                        cacheWritesPrice?: number | undefined;
                        cacheReadsPrice?: number | undefined;
                    }[] | undefined;
                } | null | undefined;
                openAiUseAzure?: boolean | undefined;
                azureApiVersion?: string | undefined;
                openAiStreamingEnabled?: boolean | undefined;
                openAiHostHeader?: string | undefined;
                openAiHeaders?: Record<string, string> | undefined;
                ollamaModelId?: string | undefined;
                ollamaBaseUrl?: string | undefined;
                ollamaApiKey?: string | undefined;
                vsCodeLmModelSelector?: {
                    id?: string | undefined;
                    family?: string | undefined;
                    version?: string | undefined;
                    vendor?: string | undefined;
                } | undefined;
                lmStudioModelId?: string | undefined;
                lmStudioBaseUrl?: string | undefined;
                lmStudioDraftModelId?: string | undefined;
                lmStudioSpeculativeDecodingEnabled?: boolean | undefined;
                geminiApiKey?: string | undefined;
                googleGeminiBaseUrl?: string | undefined;
                geminiCliOAuthPath?: string | undefined;
                geminiCliProjectId?: string | undefined;
                openAiNativeApiKey?: string | undefined;
                openAiNativeBaseUrl?: string | undefined;
                openAiNativeServiceTier?: "default" | "flex" | "priority" | undefined;
                mistralApiKey?: string | undefined;
                mistralCodestralUrl?: string | undefined;
                deepSeekBaseUrl?: string | undefined;
                deepSeekApiKey?: string | undefined;
                deepInfraBaseUrl?: string | undefined;
                deepInfraApiKey?: string | undefined;
                deepInfraModelId?: string | undefined;
                doubaoBaseUrl?: string | undefined;
                doubaoApiKey?: string | undefined;
                moonshotBaseUrl?: "https://api.moonshot.ai/v1" | "https://api.moonshot.cn/v1" | undefined;
                moonshotApiKey?: string | undefined;
                unboundApiKey?: string | undefined;
                unboundModelId?: string | undefined;
                requestyBaseUrl?: string | undefined;
                requestyApiKey?: string | undefined;
                requestyModelId?: string | undefined;
                fakeAi?: unknown;
                xaiApiKey?: string | undefined;
                groqApiKey?: string | undefined;
                huggingFaceApiKey?: string | undefined;
                huggingFaceModelId?: string | undefined;
                huggingFaceInferenceProvider?: string | undefined;
                chutesApiKey?: string | undefined;
                litellmBaseUrl?: string | undefined;
                litellmApiKey?: string | undefined;
                litellmModelId?: string | undefined;
                litellmUsePromptCache?: boolean | undefined;
                cerebrasApiKey?: string | undefined;
                sambaNovaApiKey?: string | undefined;
                zaiApiKey?: string | undefined;
                zaiApiLine?: "china" | "international" | undefined;
                fireworksApiKey?: string | undefined;
                featherlessApiKey?: string | undefined;
                ioIntelligenceModelId?: string | undefined;
                ioIntelligenceApiKey?: string | undefined;
                qwenCodeOauthPath?: string | undefined;
                vercelAiGatewayApiKey?: string | undefined;
                vercelAiGatewayModelId?: string | undefined;
            };
        };
        modeApiConfigs: {
            [x: string]: string;
        };
    };
    globalSettings: {
        diffEnabled?: boolean | undefined;
        fuzzyMatchThreshold?: number | undefined;
        rateLimitSeconds?: number | undefined;
        mode?: string | undefined;
        language?: "id" | "ca" | "de" | "en" | "es" | "fr" | "hi" | "it" | "ja" | "ko" | "nl" | "pl" | "pt-BR" | "ru" | "tr" | "vi" | "zh-CN" | "zh-TW" | undefined;
        customInstructions?: string | undefined;
        customModes?: {
            name: string;
            slug: string;
            roleDefinition: string;
            groups: ("command" | "read" | "edit" | "browser" | "mcp" | "modes" | ["command" | "read" | "edit" | "browser" | "mcp" | "modes", {
                description?: string | undefined;
                fileRegex?: string | undefined;
            }])[];
            description?: string | undefined;
            whenToUse?: string | undefined;
            customInstructions?: string | undefined;
            source?: "global" | "project" | undefined;
        }[] | undefined;
        currentApiConfigName?: string | undefined;
        listApiConfigMeta?: {
            id: string;
            name: string;
            apiProvider?: "openai" | "anthropic" | "ollama" | "gemini" | "mistral" | "vercel-ai-gateway" | "claude-code" | "glama" | "openrouter" | "bedrock" | "vertex" | "vscode-lm" | "lmstudio" | "gemini-cli" | "openai-native" | "moonshot" | "deepseek" | "deepinfra" | "doubao" | "qwen-code" | "unbound" | "requesty" | "human-relay" | "fake-ai" | "xai" | "groq" | "chutes" | "litellm" | "huggingface" | "cerebras" | "sambanova" | "zai" | "fireworks" | "featherless" | "io-intelligence" | "roo" | undefined;
            modelId?: string | undefined;
        }[] | undefined;
        pinnedApiConfigs?: Record<string, boolean> | undefined;
        lastShownAnnouncementId?: string | undefined;
        taskHistory?: {
            number: number;
            ts: number;
            totalCost: number;
            id: string;
            task: string;
            tokensIn: number;
            tokensOut: number;
            rootTaskId?: string | undefined;
            parentTaskId?: string | undefined;
            cacheWrites?: number | undefined;
            cacheReads?: number | undefined;
            size?: number | undefined;
            workspace?: string | undefined;
            mode?: string | undefined;
        }[] | undefined;
        dismissedUpsells?: string[] | undefined;
        openRouterImageApiKey?: string | undefined;
        openRouterImageGenerationSelectedModel?: string | undefined;
        condensingApiConfigId?: string | undefined;
        customCondensingPrompt?: string | undefined;
        autoApprovalEnabled?: boolean | undefined;
        alwaysAllowReadOnly?: boolean | undefined;
        alwaysAllowReadOnlyOutsideWorkspace?: boolean | undefined;
        alwaysAllowWrite?: boolean | undefined;
        alwaysAllowWriteOutsideWorkspace?: boolean | undefined;
        alwaysAllowWriteProtected?: boolean | undefined;
        writeDelayMs?: number | undefined;
        alwaysAllowBrowser?: boolean | undefined;
        alwaysApproveResubmit?: boolean | undefined;
        requestDelaySeconds?: number | undefined;
        alwaysAllowMcp?: boolean | undefined;
        alwaysAllowModeSwitch?: boolean | undefined;
        alwaysAllowSubtasks?: boolean | undefined;
        alwaysAllowExecute?: boolean | undefined;
        alwaysAllowFollowupQuestions?: boolean | undefined;
        followupAutoApproveTimeoutMs?: number | undefined;
        alwaysAllowUpdateTodoList?: boolean | undefined;
        allowedCommands?: string[] | undefined;
        deniedCommands?: string[] | undefined;
        commandExecutionTimeout?: number | undefined;
        commandTimeoutAllowlist?: string[] | undefined;
        preventCompletionWithOpenTodos?: boolean | undefined;
        allowedMaxRequests?: number | null | undefined;
        allowedMaxCost?: number | null | undefined;
        autoCondenseContext?: boolean | undefined;
        autoCondenseContextPercent?: number | undefined;
        maxConcurrentFileReads?: number | undefined;
        includeDiagnosticMessages?: boolean | undefined;
        maxDiagnosticMessages?: number | undefined;
        browserToolEnabled?: boolean | undefined;
        browserViewportSize?: string | undefined;
        screenshotQuality?: number | undefined;
        remoteBrowserEnabled?: boolean | undefined;
        remoteBrowserHost?: string | undefined;
        cachedChromeHostUrl?: string | undefined;
        enableCheckpoints?: boolean | undefined;
        ttsEnabled?: boolean | undefined;
        ttsSpeed?: number | undefined;
        soundEnabled?: boolean | undefined;
        soundVolume?: number | undefined;
        maxOpenTabsContext?: number | undefined;
        maxWorkspaceFiles?: number | undefined;
        showRooIgnoredFiles?: boolean | undefined;
        maxReadFileLine?: number | undefined;
        maxImageFileSize?: number | undefined;
        maxTotalImageSize?: number | undefined;
        terminalOutputLineLimit?: number | undefined;
        terminalOutputCharacterLimit?: number | undefined;
        terminalShellIntegrationTimeout?: number | undefined;
        terminalShellIntegrationDisabled?: boolean | undefined;
        terminalCommandDelay?: number | undefined;
        terminalPowershellCounter?: boolean | undefined;
        terminalZshClearEolMark?: boolean | undefined;
        terminalZshOhMy?: boolean | undefined;
        terminalZshP10k?: boolean | undefined;
        terminalZdotdir?: boolean | undefined;
        terminalCompressProgressBar?: boolean | undefined;
        diagnosticsEnabled?: boolean | undefined;
        experiments?: {
            powerSteering?: boolean | undefined;
            multiFileApplyDiff?: boolean | undefined;
            preventFocusDisruption?: boolean | undefined;
            imageGeneration?: boolean | undefined;
            runSlashCommand?: boolean | undefined;
        } | undefined;
        codebaseIndexModels?: {
            openai?: Record<string, {
                dimension: number;
            }> | undefined;
            ollama?: Record<string, {
                dimension: number;
            }> | undefined;
            "openai-compatible"?: Record<string, {
                dimension: number;
            }> | undefined;
            gemini?: Record<string, {
                dimension: number;
            }> | undefined;
            mistral?: Record<string, {
                dimension: number;
            }> | undefined;
            "vercel-ai-gateway"?: Record<string, {
                dimension: number;
            }> | undefined;
        } | undefined;
        codebaseIndexConfig?: {
            codebaseIndexEnabled?: boolean | undefined;
            codebaseIndexQdrantUrl?: string | undefined;
            codebaseIndexEmbedderProvider?: "openai" | "ollama" | "openai-compatible" | "gemini" | "mistral" | "vercel-ai-gateway" | undefined;
            codebaseIndexEmbedderBaseUrl?: string | undefined;
            codebaseIndexEmbedderModelId?: string | undefined;
            codebaseIndexEmbedderModelDimension?: number | undefined;
            codebaseIndexSearchMinScore?: number | undefined;
            codebaseIndexSearchMaxResults?: number | undefined;
            codebaseIndexOpenAiCompatibleBaseUrl?: string | undefined;
            codebaseIndexOpenAiCompatibleModelDimension?: number | undefined;
        } | undefined;
        telemetrySetting?: "unset" | "enabled" | "disabled" | undefined;
        mcpEnabled?: boolean | undefined;
        enableMcpServerCreation?: boolean | undefined;
        modeApiConfigs?: Record<string, string> | undefined;
        customModePrompts?: Record<string, {
            description?: string | undefined;
            roleDefinition?: string | undefined;
            whenToUse?: string | undefined;
            customInstructions?: string | undefined;
        } | undefined> | undefined;
        customSupportPrompts?: Record<string, string | undefined> | undefined;
        enhancementApiConfigId?: string | undefined;
        includeTaskHistoryInEnhance?: boolean | undefined;
        historyPreviewCollapsed?: boolean | undefined;
        profileThresholds?: Record<string, number> | undefined;
        hasOpenedModeSelector?: boolean | undefined;
        lastModeExportPath?: string | undefined;
        lastModeImportPath?: string | undefined;
    };
    success: boolean;
    readonly error?: undefined;
} | {
    success: boolean;
    error: string;
    providerProfiles?: undefined;
    globalSettings?: undefined;
}>;
/**
 * Import settings from a specific file
 * @param options - Import options containing managers and proxy
 * @param fileUri - URI of the file to import from
 * @returns Promise resolving to import result
 */
export declare const importSettingsFromFile: ({ providerSettingsManager, contextProxy, customModesManager }: ImportOptions, fileUri: vscode.Uri) => Promise<{
    providerProfiles: {
        currentApiConfigName: string;
        apiConfigs: {
            [x: string]: {
                id?: string | undefined;
                reasoningEffort?: "low" | "medium" | "high" | "minimal" | undefined;
                codebaseIndexOpenAiCompatibleBaseUrl?: string | undefined;
                codebaseIndexOpenAiCompatibleModelDimension?: number | undefined;
                codeIndexOpenAiKey?: string | undefined;
                codeIndexQdrantApiKey?: string | undefined;
                codebaseIndexOpenAiCompatibleApiKey?: string | undefined;
                codebaseIndexGeminiApiKey?: string | undefined;
                codebaseIndexMistralApiKey?: string | undefined;
                codebaseIndexVercelAiGatewayApiKey?: string | undefined;
                apiProvider?: "openai" | "anthropic" | "ollama" | "gemini" | "mistral" | "vercel-ai-gateway" | "claude-code" | "glama" | "openrouter" | "bedrock" | "vertex" | "vscode-lm" | "lmstudio" | "gemini-cli" | "openai-native" | "moonshot" | "deepseek" | "deepinfra" | "doubao" | "qwen-code" | "unbound" | "requesty" | "human-relay" | "fake-ai" | "xai" | "groq" | "chutes" | "litellm" | "huggingface" | "cerebras" | "sambanova" | "zai" | "fireworks" | "featherless" | "io-intelligence" | "roo" | undefined;
                includeMaxTokens?: boolean | undefined;
                diffEnabled?: boolean | undefined;
                todoListEnabled?: boolean | undefined;
                fuzzyMatchThreshold?: number | undefined;
                modelTemperature?: number | null | undefined;
                rateLimitSeconds?: number | undefined;
                consecutiveMistakeLimit?: number | undefined;
                enableReasoningEffort?: boolean | undefined;
                modelMaxTokens?: number | undefined;
                modelMaxThinkingTokens?: number | undefined;
                verbosity?: "low" | "medium" | "high" | undefined;
                apiModelId?: string | undefined;
                apiKey?: string | undefined;
                anthropicBaseUrl?: string | undefined;
                anthropicUseAuthToken?: boolean | undefined;
                anthropicBeta1MContext?: boolean | undefined;
                claudeCodePath?: string | undefined;
                claudeCodeMaxOutputTokens?: number | undefined;
                glamaModelId?: string | undefined;
                glamaApiKey?: string | undefined;
                openRouterApiKey?: string | undefined;
                openRouterModelId?: string | undefined;
                openRouterBaseUrl?: string | undefined;
                openRouterSpecificProvider?: string | undefined;
                openRouterUseMiddleOutTransform?: boolean | undefined;
                awsAccessKey?: string | undefined;
                awsSecretKey?: string | undefined;
                awsSessionToken?: string | undefined;
                awsRegion?: string | undefined;
                awsUseCrossRegionInference?: boolean | undefined;
                awsUsePromptCache?: boolean | undefined;
                awsProfile?: string | undefined;
                awsUseProfile?: boolean | undefined;
                awsApiKey?: string | undefined;
                awsUseApiKey?: boolean | undefined;
                awsCustomArn?: string | undefined;
                awsModelContextWindow?: number | undefined;
                awsBedrockEndpointEnabled?: boolean | undefined;
                awsBedrockEndpoint?: string | undefined;
                awsBedrock1MContext?: boolean | undefined;
                vertexKeyFile?: string | undefined;
                vertexJsonCredentials?: string | undefined;
                vertexProjectId?: string | undefined;
                vertexRegion?: string | undefined;
                enableUrlContext?: boolean | undefined;
                enableGrounding?: boolean | undefined;
                openAiBaseUrl?: string | undefined;
                openAiApiKey?: string | undefined;
                openAiLegacyFormat?: boolean | undefined;
                openAiR1FormatEnabled?: boolean | undefined;
                openAiModelId?: string | undefined;
                openAiCustomModelInfo?: {
                    contextWindow: number;
                    supportsPromptCache: boolean;
                    maxTokens?: number | null | undefined;
                    maxThinkingTokens?: number | null | undefined;
                    supportsImages?: boolean | undefined;
                    supportsComputerUse?: boolean | undefined;
                    supportsVerbosity?: boolean | undefined;
                    supportsReasoningBudget?: boolean | undefined;
                    supportsTemperature?: boolean | undefined;
                    requiredReasoningBudget?: boolean | undefined;
                    supportsReasoningEffort?: boolean | undefined;
                    supportedParameters?: ("reasoning" | "max_tokens" | "temperature" | "include_reasoning")[] | undefined;
                    inputPrice?: number | undefined;
                    outputPrice?: number | undefined;
                    cacheWritesPrice?: number | undefined;
                    cacheReadsPrice?: number | undefined;
                    description?: string | undefined;
                    reasoningEffort?: "low" | "medium" | "high" | undefined;
                    minTokensPerCachePoint?: number | undefined;
                    maxCachePoints?: number | undefined;
                    cachableFields?: string[] | undefined;
                    tiers?: {
                        contextWindow: number;
                        name?: "default" | "flex" | "priority" | undefined;
                        inputPrice?: number | undefined;
                        outputPrice?: number | undefined;
                        cacheWritesPrice?: number | undefined;
                        cacheReadsPrice?: number | undefined;
                    }[] | undefined;
                } | null | undefined;
                openAiUseAzure?: boolean | undefined;
                azureApiVersion?: string | undefined;
                openAiStreamingEnabled?: boolean | undefined;
                openAiHostHeader?: string | undefined;
                openAiHeaders?: Record<string, string> | undefined;
                ollamaModelId?: string | undefined;
                ollamaBaseUrl?: string | undefined;
                ollamaApiKey?: string | undefined;
                vsCodeLmModelSelector?: {
                    id?: string | undefined;
                    family?: string | undefined;
                    version?: string | undefined;
                    vendor?: string | undefined;
                } | undefined;
                lmStudioModelId?: string | undefined;
                lmStudioBaseUrl?: string | undefined;
                lmStudioDraftModelId?: string | undefined;
                lmStudioSpeculativeDecodingEnabled?: boolean | undefined;
                geminiApiKey?: string | undefined;
                googleGeminiBaseUrl?: string | undefined;
                geminiCliOAuthPath?: string | undefined;
                geminiCliProjectId?: string | undefined;
                openAiNativeApiKey?: string | undefined;
                openAiNativeBaseUrl?: string | undefined;
                openAiNativeServiceTier?: "default" | "flex" | "priority" | undefined;
                mistralApiKey?: string | undefined;
                mistralCodestralUrl?: string | undefined;
                deepSeekBaseUrl?: string | undefined;
                deepSeekApiKey?: string | undefined;
                deepInfraBaseUrl?: string | undefined;
                deepInfraApiKey?: string | undefined;
                deepInfraModelId?: string | undefined;
                doubaoBaseUrl?: string | undefined;
                doubaoApiKey?: string | undefined;
                moonshotBaseUrl?: "https://api.moonshot.ai/v1" | "https://api.moonshot.cn/v1" | undefined;
                moonshotApiKey?: string | undefined;
                unboundApiKey?: string | undefined;
                unboundModelId?: string | undefined;
                requestyBaseUrl?: string | undefined;
                requestyApiKey?: string | undefined;
                requestyModelId?: string | undefined;
                fakeAi?: unknown;
                xaiApiKey?: string | undefined;
                groqApiKey?: string | undefined;
                huggingFaceApiKey?: string | undefined;
                huggingFaceModelId?: string | undefined;
                huggingFaceInferenceProvider?: string | undefined;
                chutesApiKey?: string | undefined;
                litellmBaseUrl?: string | undefined;
                litellmApiKey?: string | undefined;
                litellmModelId?: string | undefined;
                litellmUsePromptCache?: boolean | undefined;
                cerebrasApiKey?: string | undefined;
                sambaNovaApiKey?: string | undefined;
                zaiApiKey?: string | undefined;
                zaiApiLine?: "china" | "international" | undefined;
                fireworksApiKey?: string | undefined;
                featherlessApiKey?: string | undefined;
                ioIntelligenceModelId?: string | undefined;
                ioIntelligenceApiKey?: string | undefined;
                qwenCodeOauthPath?: string | undefined;
                vercelAiGatewayApiKey?: string | undefined;
                vercelAiGatewayModelId?: string | undefined;
            };
        };
        modeApiConfigs: {
            [x: string]: string;
        };
    };
    globalSettings: {
        diffEnabled?: boolean | undefined;
        fuzzyMatchThreshold?: number | undefined;
        rateLimitSeconds?: number | undefined;
        mode?: string | undefined;
        language?: "id" | "ca" | "de" | "en" | "es" | "fr" | "hi" | "it" | "ja" | "ko" | "nl" | "pl" | "pt-BR" | "ru" | "tr" | "vi" | "zh-CN" | "zh-TW" | undefined;
        customInstructions?: string | undefined;
        customModes?: {
            name: string;
            slug: string;
            roleDefinition: string;
            groups: ("command" | "read" | "edit" | "browser" | "mcp" | "modes" | ["command" | "read" | "edit" | "browser" | "mcp" | "modes", {
                description?: string | undefined;
                fileRegex?: string | undefined;
            }])[];
            description?: string | undefined;
            whenToUse?: string | undefined;
            customInstructions?: string | undefined;
            source?: "global" | "project" | undefined;
        }[] | undefined;
        currentApiConfigName?: string | undefined;
        listApiConfigMeta?: {
            id: string;
            name: string;
            apiProvider?: "openai" | "anthropic" | "ollama" | "gemini" | "mistral" | "vercel-ai-gateway" | "claude-code" | "glama" | "openrouter" | "bedrock" | "vertex" | "vscode-lm" | "lmstudio" | "gemini-cli" | "openai-native" | "moonshot" | "deepseek" | "deepinfra" | "doubao" | "qwen-code" | "unbound" | "requesty" | "human-relay" | "fake-ai" | "xai" | "groq" | "chutes" | "litellm" | "huggingface" | "cerebras" | "sambanova" | "zai" | "fireworks" | "featherless" | "io-intelligence" | "roo" | undefined;
            modelId?: string | undefined;
        }[] | undefined;
        pinnedApiConfigs?: Record<string, boolean> | undefined;
        lastShownAnnouncementId?: string | undefined;
        taskHistory?: {
            number: number;
            ts: number;
            totalCost: number;
            id: string;
            task: string;
            tokensIn: number;
            tokensOut: number;
            rootTaskId?: string | undefined;
            parentTaskId?: string | undefined;
            cacheWrites?: number | undefined;
            cacheReads?: number | undefined;
            size?: number | undefined;
            workspace?: string | undefined;
            mode?: string | undefined;
        }[] | undefined;
        dismissedUpsells?: string[] | undefined;
        openRouterImageApiKey?: string | undefined;
        openRouterImageGenerationSelectedModel?: string | undefined;
        condensingApiConfigId?: string | undefined;
        customCondensingPrompt?: string | undefined;
        autoApprovalEnabled?: boolean | undefined;
        alwaysAllowReadOnly?: boolean | undefined;
        alwaysAllowReadOnlyOutsideWorkspace?: boolean | undefined;
        alwaysAllowWrite?: boolean | undefined;
        alwaysAllowWriteOutsideWorkspace?: boolean | undefined;
        alwaysAllowWriteProtected?: boolean | undefined;
        writeDelayMs?: number | undefined;
        alwaysAllowBrowser?: boolean | undefined;
        alwaysApproveResubmit?: boolean | undefined;
        requestDelaySeconds?: number | undefined;
        alwaysAllowMcp?: boolean | undefined;
        alwaysAllowModeSwitch?: boolean | undefined;
        alwaysAllowSubtasks?: boolean | undefined;
        alwaysAllowExecute?: boolean | undefined;
        alwaysAllowFollowupQuestions?: boolean | undefined;
        followupAutoApproveTimeoutMs?: number | undefined;
        alwaysAllowUpdateTodoList?: boolean | undefined;
        allowedCommands?: string[] | undefined;
        deniedCommands?: string[] | undefined;
        commandExecutionTimeout?: number | undefined;
        commandTimeoutAllowlist?: string[] | undefined;
        preventCompletionWithOpenTodos?: boolean | undefined;
        allowedMaxRequests?: number | null | undefined;
        allowedMaxCost?: number | null | undefined;
        autoCondenseContext?: boolean | undefined;
        autoCondenseContextPercent?: number | undefined;
        maxConcurrentFileReads?: number | undefined;
        includeDiagnosticMessages?: boolean | undefined;
        maxDiagnosticMessages?: number | undefined;
        browserToolEnabled?: boolean | undefined;
        browserViewportSize?: string | undefined;
        screenshotQuality?: number | undefined;
        remoteBrowserEnabled?: boolean | undefined;
        remoteBrowserHost?: string | undefined;
        cachedChromeHostUrl?: string | undefined;
        enableCheckpoints?: boolean | undefined;
        ttsEnabled?: boolean | undefined;
        ttsSpeed?: number | undefined;
        soundEnabled?: boolean | undefined;
        soundVolume?: number | undefined;
        maxOpenTabsContext?: number | undefined;
        maxWorkspaceFiles?: number | undefined;
        showRooIgnoredFiles?: boolean | undefined;
        maxReadFileLine?: number | undefined;
        maxImageFileSize?: number | undefined;
        maxTotalImageSize?: number | undefined;
        terminalOutputLineLimit?: number | undefined;
        terminalOutputCharacterLimit?: number | undefined;
        terminalShellIntegrationTimeout?: number | undefined;
        terminalShellIntegrationDisabled?: boolean | undefined;
        terminalCommandDelay?: number | undefined;
        terminalPowershellCounter?: boolean | undefined;
        terminalZshClearEolMark?: boolean | undefined;
        terminalZshOhMy?: boolean | undefined;
        terminalZshP10k?: boolean | undefined;
        terminalZdotdir?: boolean | undefined;
        terminalCompressProgressBar?: boolean | undefined;
        diagnosticsEnabled?: boolean | undefined;
        experiments?: {
            powerSteering?: boolean | undefined;
            multiFileApplyDiff?: boolean | undefined;
            preventFocusDisruption?: boolean | undefined;
            imageGeneration?: boolean | undefined;
            runSlashCommand?: boolean | undefined;
        } | undefined;
        codebaseIndexModels?: {
            openai?: Record<string, {
                dimension: number;
            }> | undefined;
            ollama?: Record<string, {
                dimension: number;
            }> | undefined;
            "openai-compatible"?: Record<string, {
                dimension: number;
            }> | undefined;
            gemini?: Record<string, {
                dimension: number;
            }> | undefined;
            mistral?: Record<string, {
                dimension: number;
            }> | undefined;
            "vercel-ai-gateway"?: Record<string, {
                dimension: number;
            }> | undefined;
        } | undefined;
        codebaseIndexConfig?: {
            codebaseIndexEnabled?: boolean | undefined;
            codebaseIndexQdrantUrl?: string | undefined;
            codebaseIndexEmbedderProvider?: "openai" | "ollama" | "openai-compatible" | "gemini" | "mistral" | "vercel-ai-gateway" | undefined;
            codebaseIndexEmbedderBaseUrl?: string | undefined;
            codebaseIndexEmbedderModelId?: string | undefined;
            codebaseIndexEmbedderModelDimension?: number | undefined;
            codebaseIndexSearchMinScore?: number | undefined;
            codebaseIndexSearchMaxResults?: number | undefined;
            codebaseIndexOpenAiCompatibleBaseUrl?: string | undefined;
            codebaseIndexOpenAiCompatibleModelDimension?: number | undefined;
        } | undefined;
        telemetrySetting?: "unset" | "enabled" | "disabled" | undefined;
        mcpEnabled?: boolean | undefined;
        enableMcpServerCreation?: boolean | undefined;
        modeApiConfigs?: Record<string, string> | undefined;
        customModePrompts?: Record<string, {
            description?: string | undefined;
            roleDefinition?: string | undefined;
            whenToUse?: string | undefined;
            customInstructions?: string | undefined;
        } | undefined> | undefined;
        customSupportPrompts?: Record<string, string | undefined> | undefined;
        enhancementApiConfigId?: string | undefined;
        includeTaskHistoryInEnhance?: boolean | undefined;
        historyPreviewCollapsed?: boolean | undefined;
        profileThresholds?: Record<string, number> | undefined;
        hasOpenedModeSelector?: boolean | undefined;
        lastModeExportPath?: string | undefined;
        lastModeImportPath?: string | undefined;
    };
    success: boolean;
    readonly error?: undefined;
} | {
    success: boolean;
    error: string;
    providerProfiles?: undefined;
    globalSettings?: undefined;
}>;
export declare const exportSettings: ({ providerSettingsManager, contextProxy }: ExportOptions) => Promise<void>;
/**
 * Import settings with complete UI feedback and provider state updates
 * @param options - Import options with provider instance
 * @param filePath - Optional file path to import from. If not provided, a file dialog will be shown.
 * @returns Promise that resolves when import is complete
 */
export declare const importSettingsWithFeedback: ({ providerSettingsManager, contextProxy, customModesManager, provider }: ImportWithProviderOptions, filePath?: string) => Promise<void>;
export {};
