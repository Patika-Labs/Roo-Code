export declare const sampleZig = "\nconst std = @import(\"std\");\n\n// A basic struct\npub const Point = struct {\n    x: f32,\n    y: f32,\n\n    pub fn init(x: f32, y: f32) Point {\n        return Point{ .x = x, .y = y };\n    }\n\n    pub fn distance(self: Point) f32 {\n        return @sqrt(self.x * self.x + self.y * self.y);\n    }\n};\n\n// A function definition\npub fn main() !void {\n    const point = Point.init(3.0, 4.0);\n    const dist = point.distance();\n    std.debug.print(\"Distance: {d}\n\", .{dist});\n}\n\n// An enum definition\nconst Direction = enum {\n    North,\n    South,\n    East,\n    West,\n};\n\n// Global variables\nvar global_point: Point = undefined;\npub const VERSION: u32 = 1;\n\n// A type definition\npub const Vector = struct {\n    direction: Direction,\n    magnitude: f32,\n};\n";
