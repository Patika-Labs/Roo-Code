declare const _default: "\n; Using directives\n(using_directive) @name.definition.using\n\n; Namespace declarations (including file-scoped)\n(namespace_declaration\n  name: (identifier) @name.definition.namespace)\n(file_scoped_namespace_declaration\n  name: (identifier) @name.definition.namespace)\n\n; Class declarations (including generic, static, abstract, partial, nested)\n(class_declaration\n  name: (identifier) @name.definition.class)\n\n; Interface declarations\n(interface_declaration\n  name: (identifier) @name.definition.interface)\n\n; Struct declarations\n(struct_declaration\n  name: (identifier) @name.definition.struct)\n\n; Enum declarations\n(enum_declaration\n  name: (identifier) @name.definition.enum)\n\n; Record declarations\n(record_declaration\n  name: (identifier) @name.definition.record)\n\n; Method declarations (including async, static, generic)\n(method_declaration\n  name: (identifier) @name.definition.method)\n\n; Property declarations\n(property_declaration\n  name: (identifier) @name.definition.property)\n\n; Event declarations\n(event_declaration\n  name: (identifier) @name.definition.event)\n\n; Delegate declarations\n(delegate_declaration\n  name: (identifier) @name.definition.delegate)\n\n; Attribute declarations\n(class_declaration\n  (attribute_list\n    (attribute\n      name: (identifier) @name.definition.attribute)))\n\n; Generic type parameters\n(type_parameter_list\n  (type_parameter\n    name: (identifier) @name.definition.type_parameter))\n\n; LINQ expressions\n(query_expression) @name.definition.linq_expression\n";
export default _default;
