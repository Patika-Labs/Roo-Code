declare const _default: "\n; Module declarations\n(module_declaration\n  name: (scoped_identifier) @name.definition.module) @definition.module\n\n; Package declarations\n((package_declaration\n  (scoped_identifier)) @name.definition.package) @definition.package\n\n; Line comments\n(line_comment) @definition.comment\n\n; Class declarations\n(class_declaration\n  name: (identifier) @name.definition.class) @definition.class\n\n; Interface declarations\n(interface_declaration\n  name: (identifier) @name.definition.interface) @definition.interface\n\n; Enum declarations\n(enum_declaration\n  name: (identifier) @name.definition.enum) @definition.enum\n\n; Record declarations\n(record_declaration\n  name: (identifier) @name.definition.record) @definition.record\n\n; Annotation declarations\n(annotation_type_declaration\n  name: (identifier) @name.definition.annotation) @definition.annotation\n\n; Constructor declarations\n(constructor_declaration\n  name: (identifier) @name.definition.constructor) @definition.constructor\n\n; Method declarations\n(method_declaration\n  name: (identifier) @name.definition.method) @definition.method\n\n; Inner class declarations\n(class_declaration\n  (class_body\n    (class_declaration\n      name: (identifier) @name.definition.inner_class))) @definition.inner_class\n\n; Static nested class declarations\n(class_declaration\n  (class_body\n    (class_declaration\n      name: (identifier) @name.definition.static_nested_class))) @definition.static_nested_class\n\n; Lambda expressions\n(lambda_expression) @definition.lambda\n\n; Field declarations\n(field_declaration\n  (modifiers)?\n  type: (_)\n  declarator: (variable_declarator\n    name: (identifier) @name.definition.field)) @definition.field\n\n; Import declarations\n(import_declaration\n  (scoped_identifier) @name.definition.import) @definition.import\n\n; Type parameters\n(type_parameters\n  (type_parameter) @name.definition.type_parameter) @definition.type_parameter\n";
export default _default;
