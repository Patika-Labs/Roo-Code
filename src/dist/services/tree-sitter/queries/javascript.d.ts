declare const _default: "\n(\n  (comment)* @doc\n  .\n  (method_definition\n    name: (property_identifier) @name) @definition.method\n  (#not-eq? @name \"constructor\")\n  (#strip! @doc \"^[\\s\\*/]+|^[\\s\\*/]$\")\n  (#select-adjacent! @doc @definition.method)\n)\n\n(\n  (comment)* @doc\n  .\n  [\n    (class\n      name: (_) @name)\n    (class_declaration\n      name: (_) @name)\n  ] @definition.class\n  (#strip! @doc \"^[\\s\\*/]+|^[\\s\\*/]$\")\n  (#select-adjacent! @doc @definition.class)\n)\n\n(\n  (comment)* @doc\n  .\n  [\n    (function_declaration\n      name: (identifier) @name)\n    (generator_function_declaration\n      name: (identifier) @name)\n  ] @definition.function\n  (#strip! @doc \"^[\\s\\*/]+|^[\\s\\*/]$\")\n  (#select-adjacent! @doc @definition.function)\n)\n\n(\n  (comment)* @doc\n  .\n  (lexical_declaration\n    (variable_declarator\n      name: (identifier) @name\n      value: [(arrow_function) (function_expression)]) @definition.function)\n  (#strip! @doc \"^[\\s\\*/]+|^[\\s\\*/]$\")\n  (#select-adjacent! @doc @definition.function)\n)\n\n(\n  (comment)* @doc\n  .\n  (variable_declaration\n    (variable_declarator\n      name: (identifier) @name\n      value: [(arrow_function) (function_expression)]) @definition.function)\n  (#strip! @doc \"^[\\s\\*/]+|^[\\s\\*/]$\")\n  (#select-adjacent! @doc @definition.function)\n)\n\n; JSON object definitions\n(object) @object.definition\n\n; JSON object key-value pairs\n(pair\n  key: (string) @property.name.definition\n  value: [\n    (object) @object.value\n    (array) @array.value\n    (string) @string.value\n    (number) @number.value\n    (true) @boolean.value\n    (false) @boolean.value\n    (null) @null.value\n  ]\n) @property.definition\n\n; JSON array definitions\n(array) @array.definition\n; Decorated method definitions\n(\n  [\n    (method_definition\n      decorator: (decorator)\n      name: (property_identifier) @name) @definition.method\n    (method_definition\n      decorator: (decorator\n        (call_expression\n          function: (identifier) @decorator_name))\n      name: (property_identifier) @name) @definition.method\n  ]\n  (#not-eq? @name \"constructor\")\n)\n\n; Decorated class definitions\n(\n  [\n    (class\n      decorator: (decorator)\n      name: (_) @name) @definition.class\n    (class_declaration\n      decorator: (decorator)\n      name: (_) @name) @definition.class\n  ]\n)\n\n; Capture method names in decorated classes\n(\n  (class_declaration\n    decorator: (decorator)\n    body: (class_body\n      (method_definition\n        name: (property_identifier) @name) @definition.method))\n  (#not-eq? @name \"constructor\")\n)\n";
export default _default;
