declare const _default: "\n;--------------------------\n; 1. CLASS DEFINITIONS\n;--------------------------\n; Regular classes\n(class_declaration\n  name: (name) @name.definition.class) @definition.class\n\n; Abstract classes\n(class_declaration\n  (abstract_modifier)\n  name: (name) @name.definition.abstract_class) @definition.abstract_class\n\n; Final classes\n(class_declaration\n  (final_modifier)\n  name: (name) @name.definition.final_class) @definition.final_class\n\n; Readonly classes (PHP 8.2+)\n(class_declaration\n  (readonly_modifier)\n  name: (name) @name.definition.readonly_class) @definition.readonly_class\n\n;--------------------------\n; 2. INTERFACE & TRAIT DEFINITIONS\n;--------------------------\n; Interfaces\n(interface_declaration\n  name: (name) @name.definition.interface) @definition.interface\n\n; Traits\n(trait_declaration\n  name: (name) @name.definition.trait) @definition.trait\n\n; Enums (PHP 8.1+)\n(enum_declaration\n  name: (name) @name.definition.enum) @definition.enum\n\n;--------------------------\n; 3. FUNCTION & METHOD DEFINITIONS\n;--------------------------\n; Global functions\n(function_definition\n  name: (name) @name.definition.function) @definition.function\n\n; Regular methods\n(method_declaration\n  name: (name) @name.definition.method) @definition.method\n\n; Static methods\n(method_declaration\n  (static_modifier)\n  name: (name) @name.definition.static_method) @definition.static_method\n\n; Abstract methods\n(method_declaration\n  (abstract_modifier)\n  name: (name) @name.definition.abstract_method) @definition.abstract_method\n\n; Final methods\n(method_declaration\n  (final_modifier)\n  name: (name) @name.definition.final_method) @definition.final_method\n\n; Arrow functions (PHP 7.4+)\n(arrow_function) @definition.arrow_function\n\n;--------------------------\n; 4. PROPERTY DEFINITIONS\n;--------------------------\n; Regular properties\n(property_declaration\n  (property_element\n    (variable_name\n      (name) @name.definition.property))) @definition.property\n\n; Static properties\n(property_declaration\n  (static_modifier)\n  (property_element\n    (variable_name\n      (name) @name.definition.static_property))) @definition.static_property\n\n; Readonly properties (PHP 8.1+)\n(property_declaration\n  (readonly_modifier)\n  (property_element\n    (variable_name\n      (name) @name.definition.readonly_property))) @definition.readonly_property\n\n; Constructor property promotion (PHP 8.0+)\n(property_promotion_parameter\n  name: (variable_name\n    (name) @name.definition.promoted_property)) @definition.promoted_property\n\n;--------------------------\n; 5. OTHER LANGUAGE CONSTRUCTS\n;--------------------------\n; Constants\n(const_declaration\n  (const_element\n    (name) @name.definition.constant)) @definition.constant\n\n; Namespaces\n(namespace_definition\n  name: (namespace_name) @name.definition.namespace) @definition.namespace\n\n; Use statements (imports)\n(namespace_use_declaration\n  (namespace_use_clause\n    (qualified_name) @name.definition.use)) @definition.use\n\n; Anonymous classes\n(object_creation_expression\n  (declaration_list)) @definition.anonymous_class\n\n; Attributes (PHP 8.0+)\n(attribute_group\n  (attribute\n    (name) @name.definition.attribute)) @definition.attribute\n\n; Match expressions (PHP 8.0+)\n(match_expression) @definition.match_expression\n\n; Heredoc syntax\n(heredoc) @definition.heredoc\n\n; Nowdoc syntax\n(nowdoc) @definition.nowdoc\n";
export default _default;
