declare const _default: "\n; Function definitions (all types)\n(function_item\n    name: (identifier) @name.definition.function) @definition.function\n\n; Struct definitions (all types - standard, tuple, unit)\n(struct_item\n    name: (type_identifier) @name.definition.struct) @definition.struct\n\n; Enum definitions with variants\n(enum_item\n    name: (type_identifier) @name.definition.enum) @definition.enum\n\n; Trait definitions\n(trait_item\n    name: (type_identifier) @name.definition.trait) @definition.trait\n\n; Impl blocks (inherent implementation)\n(impl_item\n    type: (type_identifier) @name.definition.impl) @definition.impl\n\n; Trait implementations\n(impl_item\n    trait: (type_identifier) @name.definition.impl_trait\n    type: (type_identifier) @name.definition.impl_for) @definition.impl_trait\n\n; Module definitions\n(mod_item\n    name: (identifier) @name.definition.module) @definition.module\n\n; Macro definitions\n(macro_definition\n    name: (identifier) @name.definition.macro) @definition.macro\n\n; Attribute macros (for #[derive(...)] etc.)\n(attribute_item\n    (attribute) @name.definition.attribute) @definition.attribute\n\n; Type aliases\n(type_item\n    name: (type_identifier) @name.definition.type_alias) @definition.type_alias\n\n; Constants\n(const_item\n    name: (identifier) @name.definition.constant) @definition.constant\n\n; Static items\n(static_item\n    name: (identifier) @name.definition.static) @definition.static\n\n; Methods inside impl blocks\n(impl_item\n    body: (declaration_list\n        (function_item\n            name: (identifier) @name.definition.method))) @definition.method_container\n\n; Use declarations\n(use_declaration) @definition.use_declaration\n\n; Lifetime definitions\n(lifetime\n    \"'\" @punctuation.lifetime\n    (identifier) @name.definition.lifetime) @definition.lifetime\n\n; Where clauses\n(where_clause\n    (where_predicate)*) @definition.where_clause\n\n; Match expressions\n(match_expression\n    value: (_) @match.value\n    body: (match_block)) @definition.match\n\n; Unsafe blocks\n(unsafe_block) @definition.unsafe_block\n";
export default _default;
